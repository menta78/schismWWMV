      F O R C H E C K  (R)  V14.1.15
Copyright (c) 1984-2011  Forcheck b.v. All rights reserved
Licensed to: TU Darmstadt_1, Darmstadt, DE
Limited to a single user
PC/Linux (), serial: 9611677
Maintenance has expired

   -- INT compiler emulation

   -- Fortran 95 syntax

   -- commandline argument: -ninf -nwarn -ff -I /home/aron/opt/netcdf3/include,/home/aron/opt/mpich2_1.3_intel/include -define ST42,NCDF /home/aron/config/Software/Linux/Forchk/mpi.f90 /home/aron/Work/Quellen/Bibliotheken/NETCDF/netcdf-3.6.3/f90/netcdf.f90 /home/aron/Work/Quellen/Bibliotheken/NETCDF/netcdf-3.6.3/f90/typeSizes.f90 elfe_glbl.F90 elfe_msgp.F90 grid_subs.F90 io_subs.F90 misc_subs.F90 solver_subs.F90 wwm_ardhuin_new.F90 wwm_ardhuin_old.F90 wwm_aux.F90 wwm_babanin.F90 wwm_bdcons.F90 wwm_blasaux.F90 wwm_compute.F90 wwm_coupl.F90 wwm_datapl.F90 wwm_diclass.F90 wwm_diffrac.F90 wwm_dislin.F90 wwm_dissipation.F90 wwm_fluctsplit.F90 wwm_gridcf.F90 wwm_hotfile.F90 wwm_initio.F90 wwm_input.F90 wwm_main.F90 wwm_mjdv2.F90 wwm_nums1d.F90 wwm_numsigma.F90 wwm_numtheta.F90 wwm_output.F90 wwm_parall_solver.F90 wwm_petsc_block.F90 wwm_petsc_controller.F90 wwm_petsc_parallel.F90 wwm_petscpool.F90 wwm_petsc_seriell.F90 wwm_radiation.F90 wwm_snl3.F90 wwm_snl42.F90 wwm_snl4.F90 wwm_sourceterms.F90 wwm_sparskit.F90 wwm_specint.F90 wwm_specparam.F90 wwm_wind.F90 wwm_windinput.F90 /home/aron/config/Software/Linux/Forchk/forcheck-14.1/MPI.flb

   -- scanning input files

      - file: /home/aron/config/Software/Linux/Forchk/mpi.f90

      - file: /home/aron/Work/Quellen/Bibliotheken/NETCDF/netcdf-3.6.3/f90/netcdf.f90

      - file: /home/aron/Work/Quellen/Bibliotheken/NETCDF/netcdf-3.6.3/f90/typeSizes.f90

      - file: elfe_glbl.F90

      - file: elfe_msgp.F90

      - file: grid_subs.F90

      - file: io_subs.F90

      - file: misc_subs.F90

      - file: solver_subs.F90

      - file: wwm_ardhuin_new.F90

      - file: wwm_ardhuin_old.F90

      - file: wwm_aux.F90

      - file: wwm_babanin.F90

      - file: wwm_bdcons.F90

      - file: wwm_blasaux.F90

      - file: wwm_compute.F90

      - file: wwm_coupl.F90

      - file: wwm_datapl.F90

      - file: wwm_diclass.F90

      - file: wwm_diffrac.F90

      - file: wwm_dislin.F90

      - file: wwm_dissipation.F90

      - file: wwm_fluctsplit.F90

      - file: wwm_gridcf.F90

      - file: wwm_hotfile.F90

      - file: wwm_initio.F90

      - file: wwm_input.F90

      - file: wwm_main.F90

      - file: wwm_mjdv2.F90

      - file: wwm_nums1d.F90

      - file: wwm_numsigma.F90

      - file: wwm_numtheta.F90

      - file: wwm_output.F90

      - file: wwm_parall_solver.F90

      - file: wwm_petsc_block.F90

      - file: wwm_petsc_controller.F90

      - file: wwm_petsc_parallel.F90

      - file: wwm_petscpool.F90

      - file: wwm_petsc_seriell.F90

      - file: wwm_radiation.F90

      - file: wwm_snl3.F90

      - file: wwm_snl42.F90

      - file: wwm_snl4.F90

      - file: wwm_sourceterms.F90

      - file: wwm_sparskit.F90

      - file: wwm_specint.F90

      - file: wwm_specparam.F90

      - file: wwm_wind.F90

      - file: wwm_windinput.F90

   -- program unit analysis

   -- file: /home/aron/config/Software/Linux/Forchk/mpi.f90

      - program unit: MPI_CONSTANTS

      - program unit: MPI

   -- file: /home/aron/Work/Quellen/Bibliotheken/NETCDF/netcdf-3.6.3/f90/typeSizes.f90

      - program unit: TYPESIZES

         - module subprogram: BYTESIZESOK

   -- file: elfe_glbl.F90

      - program unit: ELFE_GLBL

         - module subprogram: RELEASE_GL

         - module subprogram: RELEASE_LLIST

   -- file: elfe_msgp.F90

      - program unit: ELFE_MSGP

         - module subprogram: PARALLEL_INIT

         - module subprogram: PARALLEL_FINALIZE

         - module subprogram: PARALLEL_ABORT

         - module subprogram: PARALLEL_BARRIER

         - module subprogram: PARALLEL_RRSYNC

         - module subprogram: MSGP_TABLES

         - module subprogram: MSGP_INIT

         - module subprogram: EXCHANGE_E2D

         - module subprogram: EXCHANGE_E2DI

         - module subprogram: EXCHANGE_E3DW

         - module subprogram: EXCHANGE_P2D

         - module subprogram: EXCHANGE_P3DW

         - module subprogram: EXCHANGE_P2D_9

         - module subprogram: EXCHANGE_P2DI

         - module subprogram: EXCHANGE_S2D

         - module subprogram: EXCHANGE_S2D_9

         - module subprogram: EXCHANGE_S2DI

         - module subprogram: EXCHANGE_S3DW

         - module subprogram: EXCHANGE_S3D_5

         - module subprogram: EXCHANGE_S3D_4

         - module subprogram: EXCHANGE_S3D_2

         - module subprogram: EXCHANGE_S3D_TR2

         - module subprogram: EXCHANGE_P3D_2

         - module subprogram: EXCHANGE_P3D_3

         - module subprogram: EXCHANGE_P3D_4

         - module subprogram: EXCHANGE_P3D_TR

         - module subprogram: EXCHANGE_E3D_TR

         - module subprogram: EXCHANGE_E3D_TR2

         - module subprogram: EXCHANGE_E3D_2

   -- file: grid_subs.F90

      - program unit: LINDEX

      - program unit: SIGNA

      - program unit: DUMP_HGRID

      - program unit: PARTITION_HGRID

      - program unit: AQUIRE_VGRID

      - program unit: AQUIRE_HGRID

         - internal subprogram: SWAP_LLRANK

         - internal subprogram: SORT_LLRANK

         - internal subprogram: SORT

   -- file: io_subs.F90

      - program unit: WRITE_OBE

      - program unit: REPORT_TIMERS

      - program unit: GET_PARAM

      - program unit: ELFE_OUTPUT_CUSTOM

   -- file: misc_subs.F90

      - program unit: LEVELS1
    150  call mpi_allreduce(srwt_xchng,srwt_xchng_gb,1,MPI_LOGICAL,MPI_LAND,comm,ierr)
(file: misc_subs.F90, line:     150)
  MPI_ALLREDUCE, dummy argument no  1
**[574 E] argument type inconsistent with first occurrence (int/log)
(file: misc_subs.F90, line:     150)
  MPI_ALLREDUCE, dummy argument no  2
**[574 E] argument type inconsistent with first occurrence (int/log)
    386  call mpi_allreduce(srwt_xchng,srwt_xchng_gb,1,MPI_LOGICAL,MPI_LOR,comm,ierr)
(file: misc_subs.F90, line:     386)
  MPI_ALLREDUCE, dummy argument no  1
**[574 E] argument type inconsistent with first occurrence (int/log)
(file: misc_subs.F90, line:     386)
  MPI_ALLREDUCE, dummy argument no  2
**[574 E] argument type inconsistent with first occurrence (int/log)
    474  call mpi_allreduce(srwt_xchng,srwt_xchng_gb,1,MPI_LOGICAL,MPI_LOR,comm,ierr)
(file: misc_subs.F90, line:     474)
  MPI_ALLREDUCE, dummy argument no  1
**[574 E] argument type inconsistent with first occurrence (int/log)
(file: misc_subs.F90, line:     474)
  MPI_ALLREDUCE, dummy argument no  2
**[574 E] argument type inconsistent with first occurrence (int/log)
    786  call mpi_allreduce(prwt_xchng,prwt_xchng_gb,1,MPI_LOGICAL,MPI_LOR,comm,ierr)
(file: misc_subs.F90, line:     786)
  MPI_ALLREDUCE, dummy argument no  1
**[574 E] argument type inconsistent with first occurrence (int/log)
(file: misc_subs.F90, line:     786)
  MPI_ALLREDUCE, dummy argument no  2
**[574 E] argument type inconsistent with first occurrence (int/log)
    788  call mpi_allreduce(srwt_xchng,srwt_xchng_gb,1,MPI_LOGICAL,MPI_LOR,comm,ierr)
(file: misc_subs.F90, line:     788)
  MPI_ALLREDUCE, dummy argument no  1
**[574 E] argument type inconsistent with first occurrence (int/log)
(file: misc_subs.F90, line:     788)
  MPI_ALLREDUCE, dummy argument no  2
**[574 E] argument type inconsistent with first occurrence (int/log)

      - program unit: LEVELS0
                  write(errmsg,*)'Pls choose a larger h_c (1):', ' node:', iplg(i), ', elev prev:', eta1(i), ', elev cur:', eta2(i), ', h_c:', h_c

      - program unit: NODALVEL

      - program unit: VINTER

      - program unit: EQSTATE

      - program unit: ASM
   1812  Gh=min(max(Gh,-0.28_rkind),0.0233_rkind)
(file: misc_subs.F90, line:    1812)
  MAX, dummy argument no  2 (A2)
**[631 E] invalid argument type length for intrinsic procedure
          (All arguments must have the same type length)
(file: misc_subs.F90, line:    1812)
  MIN, dummy argument no  2 (A2)
**[631 E] invalid argument type length for intrinsic procedure
          (All arguments must have the same type length)

      - program unit: RINT_LAG

      - program unit: LINDEX_S

      - program unit: COVAR

      - program unit: EVAL_CUBIC_SPLINE

      - program unit: CUBIC_SPLINE

      - program unit: DO_CUBIC_SPLINE

      - program unit: MEAN_DENSITY

      - program unit: KRONECKER

      - program unit: HGRAD_NODES

      - program unit: UPDATE_BDEF

      - program unit: PROJECT_PT

      - program unit: PROJECT_HVEC

      - program unit: CROSS_PRODUCT

      - program unit: COMPUTE_LL

      - program unit: ZONAL_FLOW

      - program unit: U_COMPACTZONAL

      - program unit: WBL_GM

      - program unit: AREA_COORD

   -- file: solver_subs.F90

      - program unit: SOLVE_JCG

      - program unit: SOLVE_JCG_QNON

      - program unit: TRIDAG

   -- file: wwm_ardhuin_old.F90

      - program unit: W3SRC4MD_OLD

   -- file: wwm_datapl.F90

      - program unit: DATAPOOL

   -- file: wwm_diclass.F90

   -- file: wwm_diffrac.F90

      - program unit: DIFFRA_SIMPLE

      - program unit: SMOOTH

      - program unit: BOTEFCT

      - program unit: BOTFC

      - program unit: BOTFS

      - program unit: CUREFCT

      - program unit: BOTFC2

      - program unit: BOTFS2

      - program unit: CUREFCT2

      - program unit: BOTEFCT2

      - program unit: DIFFRA_EXTENDED
    481  ENG(IP) = SQRT(MAX(ETOT,1.0E-8_rkind))
(file: wwm_diffrac.F90, line:     481)
  MAX, dummy argument no  2 (A2)
**[631 E] invalid argument type length for intrinsic procedure
          (All arguments must have the same type length)

   -- file: wwm_dislin.F90

   -- file: wwm_dissipation.F90

      - program unit: SDS_CYCLE3

      - program unit: SDS_ECMWF

      - program unit: SDS_NEDWAM_CYCLE4

      - program unit: SDS_NEDWAM_CYCLE3

      - program unit: SDS_VDW

      - program unit: SDS_BOTF
    337  SSBF(IS,:) = CFBOT * (SPSIG(IS) / SINH(MIN(20.0_rkind,KDEP)))**2
(file: wwm_dissipation.F90, line:     337)
  MIN, dummy argument no  1 (A1)
**[631 E] invalid argument type length for intrinsic procedure
          (All arguments must have the same type length)

      - program unit: SDS_SWB

   -- file: wwm_fluctsplit.F90

      - program unit: FLUCT_1

      - program unit: FLUCT_2

      - program unit: FLUCT_3

      - program unit: FLUCTCFL
    208  KSUM  = KSUM + MAX(K(POS,IE),0.0_rkind)
(file: wwm_fluctsplit.F90, line:     208)
  MAX, dummy argument no  2 (A2)
**[631 E] invalid argument type length for intrinsic procedure
          (All arguments must have the same type length)

      - program unit: EXPLICIT_N_SCHEME
    306  TMP   = SUM(MIN(0.0_rkind,KTMP))
(file: wwm_fluctsplit.F90, line:     306)
  MIN, dummy argument no  1 (A1)
**[631 E] invalid argument type length for intrinsic procedure
          (All arguments must have the same type length)
    308  KELEM(:,IE) = MAX(0.0_rkind,KTMP)
(file: wwm_fluctsplit.F90, line:     308)
  MAX, dummy argument no  1 (A1)
**[631 E] invalid argument type length for intrinsic procedure
          (All arguments must have the same type length)
    416  U = MAX(0.0_rkind,U-DTSI*ST*IOBWB)*IOBPD(ID,:)
(file: wwm_fluctsplit.F90, line:     416)
  MAX, dummy argument no  1 (A1)
**[631 E] invalid argument type length for intrinsic procedure
          (All arguments must have the same type length)
    419  U = MAX(0.0_rkind,U-DTSI*ST*IOBWB)*IOBPD(ID,:)
(file: wwm_fluctsplit.F90, line:     419)
  MAX, dummy argument no  1 (A1)
**[631 E] invalid argument type length for intrinsic procedure
          (All arguments must have the same type length)
    423  U = MAX(0.0_rkind,U-DTSI*ST*IOBWB)*IOBPD(ID,:)
(file: wwm_fluctsplit.F90, line:     423)
  MAX, dummy argument no  1 (A1)
**[631 E] invalid argument type length for intrinsic procedure
          (All arguments must have the same type length)
    441  U = MAX(0.0_rkind,U-DTSI*ST*IOBWB)*IOBPD(ID,:)
(file: wwm_fluctsplit.F90, line:     441)
  MAX, dummy argument no  1 (A1)
**[631 E] invalid argument type length for intrinsic procedure
          (All arguments must have the same type length)

      - program unit: EXPLICIT_PSI_SCHEME
    539  TMP   = SUM(MIN(0.0_rkind,KTMP))
(file: wwm_fluctsplit.F90, line:     539)
  MIN, dummy argument no  1 (A1)
**[631 E] invalid argument type length for intrinsic procedure
          (All arguments must have the same type length)
    541  KELEM(:,IE) = MAX(0.0_rkind,KTMP)
(file: wwm_fluctsplit.F90, line:     541)
  MAX, dummy argument no  1 (A1)
**[631 E] invalid argument type length for intrinsic procedure
          (All arguments must have the same type length)
    647  U = MAX(0.0_rkind,U-DTSI*ST*IOBWB)*IOBPD(ID,:)
(file: wwm_fluctsplit.F90, line:     647)
  MAX, dummy argument no  1 (A1)
**[631 E] invalid argument type length for intrinsic procedure
          (All arguments must have the same type length)

      - program unit: EXPLICIT_LFPSI_SCHEME
    743  N(IE) = - ONE/MIN(-THR,SUM(MIN(0._rkind,KELEM(:,IE))))
(file: wwm_fluctsplit.F90, line:     743)
  MIN, dummy argument no  1 (A1)
**[631 E] invalid argument type length for intrinsic procedure
          (All arguments must have the same type length)
    767  KKSUM(NI) = KKSUM(NI) + MAX(0.0_rkind,KELEM(:,IE))
(file: wwm_fluctsplit.F90, line:     767)
  MAX, dummy argument no  1 (A1)
**[631 E] invalid argument type length for intrinsic procedure
          (All arguments must have the same type length)
    803  REST  = ABS(MOD(CFLXY,1._rkind))
(file: wwm_fluctsplit.F90, line:     803)
  MOD, dummy argument no  2 (P)
**[631 E] invalid argument type length for intrinsic procedure
          (All arguments must have the same type length)
    840  TMP     =  MAX(0.0_rkind,KELEM(:,IE))
(file: wwm_fluctsplit.F90, line:     840)
  MAX, dummy argument no  1 (A1)
**[631 E] invalid argument type length for intrinsic procedure
          (All arguments must have the same type length)
    863  THETA_H = (ONETHIRD+TWOTHIRD*KELEM(:,IE)/SUM(MAX(0.0_rkind,KELEM(:,IE))))*FT
(file: wwm_fluctsplit.F90, line:     863)
  MAX, dummy argument no  1 (A1)
**[631 E] invalid argument type length for intrinsic procedure
          (All arguments must have the same type length)
    869  UL = MAX(0._rkind,U-DTSI*ST)*IOBPD(ID,:)
(file: wwm_fluctsplit.F90, line:     869)
  MAX, dummy argument no  1 (A1)
**[631 E] invalid argument type length for intrinsic procedure
          (All arguments must have the same type length)
    887  WII(1,:) = MIN(1._rkind,(UIP-UL)/MAX( VERYSMALL,PP))
(file: wwm_fluctsplit.F90, line:     887)
  MIN, dummy argument no  1 (A1)
**[631 E] invalid argument type length for intrinsic procedure
          (All arguments must have the same type length)
    888  WII(2,:) = MIN(1._rkind,(UIM-UL)/MIN(-VERYSMALL,PM))
(file: wwm_fluctsplit.F90, line:     888)
  MIN, dummy argument no  1 (A1)
**[631 E] invalid argument type length for intrinsic procedure
          (All arguments must have the same type length)
    916  U = MAX(0.0_rkind,UL-DTSI*ST*IOBWB)*IOBPD(ID,:)
(file: wwm_fluctsplit.F90, line:     916)
  MAX, dummy argument no  1 (A1)
**[631 E] invalid argument type length for intrinsic procedure
          (All arguments must have the same type length)

      - program unit: EIMPS_V1
   1021  KP(1,IE) = MAX(0.0_rkind,K(1))
(file: wwm_fluctsplit.F90, line:    1021)
  MAX, dummy argument no  1 (A1)
**[631 E] invalid argument type length for intrinsic procedure
          (All arguments must have the same type length)
   1022  KP(2,IE) = MAX(0.0_rkind,K(2))
(file: wwm_fluctsplit.F90, line:    1022)
  MAX, dummy argument no  1 (A1)
**[631 E] invalid argument type length for intrinsic procedure
          (All arguments must have the same type length)
   1023  KP(3,IE) = MAX(0.0_rkind,K(3))
(file: wwm_fluctsplit.F90, line:    1023)
  MAX, dummy argument no  1 (A1)
**[631 E] invalid argument type length for intrinsic procedure
          (All arguments must have the same type length)
   1024  KM(1) = MIN(0.0_rkind,K(1))
(file: wwm_fluctsplit.F90, line:    1024)
  MIN, dummy argument no  1 (A1)
**[631 E] invalid argument type length for intrinsic procedure
          (All arguments must have the same type length)
   1025  KM(2) = MIN(0.0_rkind,K(2))
(file: wwm_fluctsplit.F90, line:    1025)
  MIN, dummy argument no  1 (A1)
**[631 E] invalid argument type length for intrinsic procedure
          (All arguments must have the same type length)
   1026  KM(3) = MIN(0.0_rkind,K(3))
(file: wwm_fluctsplit.F90, line:    1026)
  MIN, dummy argument no  1 (A1)
**[631 E] invalid argument type length for intrinsic procedure
          (All arguments must have the same type length)
   1136  AC2(IP,IS,ID) = MAX(0.0_rkind,X(IP)) * DBLE(IOBPD(ID,IP))
(file: wwm_fluctsplit.F90, line:    1136)
  MAX, dummy argument no  1 (A1)
**[631 E] invalid argument type length for intrinsic procedure
          (All arguments must have the same type length)

      - program unit: EIMPS_ASPAR_B
   1205  KP(1,IE) = MAX(0.0_rkind,K(1))
(file: wwm_fluctsplit.F90, line:    1205)
  MAX, dummy argument no  1 (A1)
**[631 E] invalid argument type length for intrinsic procedure
          (All arguments must have the same type length)
   1206  KP(2,IE) = MAX(0.0_rkind,K(2))
(file: wwm_fluctsplit.F90, line:    1206)
  MAX, dummy argument no  1 (A1)
**[631 E] invalid argument type length for intrinsic procedure
          (All arguments must have the same type length)
   1207  KP(3,IE) = MAX(0.0_rkind,K(3))
(file: wwm_fluctsplit.F90, line:    1207)
  MAX, dummy argument no  1 (A1)
**[631 E] invalid argument type length for intrinsic procedure
          (All arguments must have the same type length)
   1208  KM(1) = MIN(0.0_rkind,K(1))
(file: wwm_fluctsplit.F90, line:    1208)
  MIN, dummy argument no  1 (A1)
**[631 E] invalid argument type length for intrinsic procedure
          (All arguments must have the same type length)
   1209  KM(2) = MIN(0.0_rkind,K(2))
(file: wwm_fluctsplit.F90, line:    1209)
  MIN, dummy argument no  1 (A1)
**[631 E] invalid argument type length for intrinsic procedure
          (All arguments must have the same type length)
   1210  KM(3) = MIN(0.0_rkind,K(3))
(file: wwm_fluctsplit.F90, line:    1210)
  MIN, dummy argument no  1 (A1)
**[631 E] invalid argument type length for intrinsic procedure
          (All arguments must have the same type length)

      - program unit: EIMPS
   1356  AC2(IP,IS,ID) = MAX(0.0_rkind,X(IP)) * DBLE(IOBPD(ID,IP))
(file: wwm_fluctsplit.F90, line:    1356)
  MAX, dummy argument no  1 (A1)
**[631 E] invalid argument type length for intrinsic procedure
          (All arguments must have the same type length)

      - program unit: CNIMPS_ASPAR_B
   1430  KP(1,IE) = MAX(0.0_rkind,K(1))
(file: wwm_fluctsplit.F90, line:    1430)
  MAX, dummy argument no  1 (A1)
**[631 E] invalid argument type length for intrinsic procedure
          (All arguments must have the same type length)
   1431  KP(2,IE) = MAX(0.0_rkind,K(2))
(file: wwm_fluctsplit.F90, line:    1431)
  MAX, dummy argument no  1 (A1)
**[631 E] invalid argument type length for intrinsic procedure
          (All arguments must have the same type length)
   1432  KP(3,IE) = MAX(0.0_rkind,K(3))
(file: wwm_fluctsplit.F90, line:    1432)
  MAX, dummy argument no  1 (A1)
**[631 E] invalid argument type length for intrinsic procedure
          (All arguments must have the same type length)
   1433  KM(1,IE) = MIN(0.0_rkind,K(1))
(file: wwm_fluctsplit.F90, line:    1433)
  MIN, dummy argument no  1 (A1)
**[631 E] invalid argument type length for intrinsic procedure
          (All arguments must have the same type length)
   1434  KM(2,IE) = MIN(0.0_rkind,K(2))
(file: wwm_fluctsplit.F90, line:    1434)
  MIN, dummy argument no  1 (A1)
**[631 E] invalid argument type length for intrinsic procedure
          (All arguments must have the same type length)
   1435  KM(3,IE) = MIN(0.0_rkind,K(3))
(file: wwm_fluctsplit.F90, line:    1435)
  MIN, dummy argument no  1 (A1)
**[631 E] invalid argument type length for intrinsic procedure
          (All arguments must have the same type length)
   1445  DELTAL(:,IE) = CRFS(:) - MAX(K(:),0.0_rkind)
(file: wwm_fluctsplit.F90, line:    1445)
  MAX, dummy argument no  2 (A2)
**[631 E] invalid argument type length for intrinsic procedure
          (All arguments must have the same type length)

      - program unit: CNIMPS
   1539  AC2(IP,IS,ID) = MAX(0.0_rkind,X(IP)) * IOBPD(ID,IP)
(file: wwm_fluctsplit.F90, line:    1539)
  MAX, dummy argument no  1 (A1)
**[631 E] invalid argument type length for intrinsic procedure
          (All arguments must have the same type length)

      - program unit: CNEIMPS
   1639  KP(:,IE)  = MAX(K(:,IE),0.0_rkind)
(file: wwm_fluctsplit.F90, line:    1639)
  MAX, dummy argument no  2 (A2)
**[631 E] invalid argument type length for intrinsic procedure
          (All arguments must have the same type length)
   1640  KM(:,IE)  = MIN(K(:,IE),0.0_rkind)
(file: wwm_fluctsplit.F90, line:    1640)
  MIN, dummy argument no  2 (A2)
**[631 E] invalid argument type length for intrinsic procedure
          (All arguments must have the same type length)
   1722  U(:) = MAX(X(:),0.0_rkind)
(file: wwm_fluctsplit.F90, line:    1722)
  MAX, dummy argument no  2 (A2)
**[631 E] invalid argument type length for intrinsic procedure
          (All arguments must have the same type length)
   1760  AC2(:,IS,ID) = MAX(0.0_rkind,X) * IOBPD(ID,:)
(file: wwm_fluctsplit.F90, line:    1760)
  MAX, dummy argument no  1 (A1)
**[631 E] invalid argument type length for intrinsic procedure
          (All arguments must have the same type length)

      - program unit: CADVXY

      - program unit: CADVXY_VECTOR

      - program unit: INIT_FLUCT_ARRAYS

      - program unit: DEALLOC_FLUCT_ARRAYS

      - program unit: INIT_IMPLICIT_FLUCT

      - program unit: DEALLOC_FLUCT

      - program unit: EXPLICIT_N_SCHEME_VECTOR
   2261  TMP(:,:)   = SUM(MIN(0.0_rkind,KTMP(:,:,:)),DIM=1)
(file: wwm_fluctsplit.F90, line:    2261)
  MIN, dummy argument no  1 (A1)
**[631 E] invalid argument type length for intrinsic procedure
          (All arguments must have the same type length)
   2263  KELEM(1,IE,:,:)  = MAX(0.0_rkind,KTMP(1,:,:))
(file: wwm_fluctsplit.F90, line:    2263)
  MAX, dummy argument no  1 (A1)
**[631 E] invalid argument type length for intrinsic procedure
          (All arguments must have the same type length)
   2264  KELEM(2,IE,:,:)  = MAX(0.0_rkind,KTMP(2,:,:))
(file: wwm_fluctsplit.F90, line:    2264)
  MAX, dummy argument no  1 (A1)
**[631 E] invalid argument type length for intrinsic procedure
          (All arguments must have the same type length)
   2265  KELEM(3,IE,:,:)  = MAX(0.0_rkind,KTMP(3,:,:))
(file: wwm_fluctsplit.F90, line:    2265)
  MAX, dummy argument no  1 (A1)
**[631 E] invalid argument type length for intrinsic procedure
          (All arguments must have the same type length)
   2361  REST = ABS(MOD(CFLXY,1._rkind))
(file: wwm_fluctsplit.F90, line:    2361)
  MOD, dummy argument no  2 (P)
**[631 E] invalid argument type length for intrinsic procedure
          (All arguments must have the same type length)
   2387  REST = ABS(MOD(CFLXY,1._rkind))
(file: wwm_fluctsplit.F90, line:    2387)
  MOD, dummy argument no  2 (P)
**[631 E] invalid argument type length for intrinsic procedure
          (All arguments must have the same type length)
   2450  U(IS,ID,:) = MAX(0.0_rkind,U(IS,ID,:)-DT4AI/SI*ST(:,IS,ID)*IOBWB)*IOBPD(ID,:)
(file: wwm_fluctsplit.F90, line:    2450)
  MAX, dummy argument no  1 (A1)
**[631 E] invalid argument type length for intrinsic procedure
          (All arguments must have the same type length)
   2474  U(IS,ID,:) = MAX(0.0_rkind,U(IS,ID,:)-DT4AI/SI*ST(:,IS,ID)*IOBWB)*IOBPD(ID,:)
(file: wwm_fluctsplit.F90, line:    2474)
  MAX, dummy argument no  1 (A1)
**[631 E] invalid argument type length for intrinsic procedure
          (All arguments must have the same type length)
   2497  U(IS,ID,:) = MAX(0.0_rkind,U(IS,ID,:)-DT4AI/SI*ST(:,IS,ID)*IOBWB)*IOBPD(ID,:)
(file: wwm_fluctsplit.F90, line:    2497)
  MAX, dummy argument no  1 (A1)
**[631 E] invalid argument type length for intrinsic procedure
          (All arguments must have the same type length)
   2526  U(IS,ID,IP) = MAX(0.0_rkind,U(IS,ID,IP)-DT4AI/SI(IP)*ST(IP,IS,ID)*IOBWB(IP))*IOBPD(ID,IP)
(file: wwm_fluctsplit.F90, line:    2526)
  MAX, dummy argument no  1 (A1)
**[631 E] invalid argument type length for intrinsic procedure
          (All arguments must have the same type length)
   2555  U(IS,ID,IP) = MAX(0.0_rkind,U(IS,ID,IP)-DT4AI/SI(IP)*ST(IP,IS,ID)*IOBWB(IP))*IOBPD(ID,IP)
(file: wwm_fluctsplit.F90, line:    2555)
  MAX, dummy argument no  1 (A1)
**[631 E] invalid argument type length for intrinsic procedure
          (All arguments must have the same type length)

      - program unit: EXPLICIT_N_SCHEME_VECTOR_HPCF
   2645  KELEM(1)  = MAX(0.0_rkind, LAMBDA(1) * IEN(1,IE) + LAMBDA(2) * IEN(2,IE) )
(file: wwm_fluctsplit.F90, line:    2645)
  MAX, dummy argument no  1 (A1)
**[631 E] invalid argument type length for intrinsic procedure
          (All arguments must have the same type length)
   2646  KELEM(2)  = MAX(0.0_rkind, LAMBDA(1) * IEN(3,IE) + LAMBDA(2) * IEN(4,IE) )
(file: wwm_fluctsplit.F90, line:    2646)
  MAX, dummy argument no  1 (A1)
**[631 E] invalid argument type length for intrinsic procedure
          (All arguments must have the same type length)
   2647  KELEM(3)  = MAX(0.0_rkind, LAMBDA(1) * IEN(5,IE) + LAMBDA(2) * IEN(6,IE) )
(file: wwm_fluctsplit.F90, line:    2647)
  MAX, dummy argument no  1 (A1)
**[631 E] invalid argument type length for intrinsic procedure
          (All arguments must have the same type length)
   2672  REST  = ABS(MOD(CFLXY,1._rkind))
(file: wwm_fluctsplit.F90, line:    2672)
  MOD, dummy argument no  2 (P)
**[631 E] invalid argument type length for intrinsic procedure
          (All arguments must have the same type length)
   2752  N         = -ONE/MIN(-THR,SUM(MIN(0._rkind,KELEM)))
(file: wwm_fluctsplit.F90, line:    2752)
  MIN, dummy argument no  1 (A1)
**[631 E] invalid argument type length for intrinsic procedure
          (All arguments must have the same type length)
   2755  KELEM(1)  = MAX(0._rkind,KELEM(1))
(file: wwm_fluctsplit.F90, line:    2755)
  MAX, dummy argument no  1 (A1)
**[631 E] invalid argument type length for intrinsic procedure
          (All arguments must have the same type length)
   2756  KELEM(2)  = MAX(0._rkind,KELEM(2))
(file: wwm_fluctsplit.F90, line:    2756)
  MAX, dummy argument no  1 (A1)
**[631 E] invalid argument type length for intrinsic procedure
          (All arguments must have the same type length)
   2757  KELEM(3)  = MAX(0._rkind,KELEM(3))
(file: wwm_fluctsplit.F90, line:    2757)
  MAX, dummy argument no  1 (A1)
**[631 E] invalid argument type length for intrinsic procedure
          (All arguments must have the same type length)
   2774  UIP(IP) = MAX(0.0_rkind,UIP(IP)-DT4AI/SI(IP)*ST*IOBWB(IP))*IOBPD(ID,IP)
(file: wwm_fluctsplit.F90, line:    2774)
  MAX, dummy argument no  1 (A1)
**[631 E] invalid argument type length for intrinsic procedure
          (All arguments must have the same type length)

      - program unit: EXPLICIT_N_SCHEME_HPCF2
   2856  KKELEM(1)  = MAX(0.0_rkind, LLAMBDA(1) * IEN(1,IE) + LLAMBDA(2) * IEN(2,IE) )
(file: wwm_fluctsplit.F90, line:    2856)
  MAX, dummy argument no  1 (A1)
**[631 E] invalid argument type length for intrinsic procedure
          (All arguments must have the same type length)
   2857  KKELEM(2)  = MAX(0.0_rkind, LLAMBDA(1) * IEN(3,IE) + LLAMBDA(2) * IEN(4,IE) )
(file: wwm_fluctsplit.F90, line:    2857)
  MAX, dummy argument no  1 (A1)
**[631 E] invalid argument type length for intrinsic procedure
          (All arguments must have the same type length)
   2858  KKELEM(3)  = MAX(0.0_rkind, LLAMBDA(1) * IEN(5,IE) + LLAMBDA(2) * IEN(6,IE) )
(file: wwm_fluctsplit.F90, line:    2858)
  MAX, dummy argument no  1 (A1)
**[631 E] invalid argument type length for intrinsic procedure
          (All arguments must have the same type length)
   2926  TMP   = SUM(MIN(0._rkind,KTMP))
(file: wwm_fluctsplit.F90, line:    2926)
  MIN, dummy argument no  1 (A1)
**[631 E] invalid argument type length for intrinsic procedure
          (All arguments must have the same type length)
   2928  KELEM(1,IE)  = MAX(0._rkind,KTMP(1))
(file: wwm_fluctsplit.F90, line:    2928)
  MAX, dummy argument no  1 (A1)
**[631 E] invalid argument type length for intrinsic procedure
          (All arguments must have the same type length)
   2929  KELEM(2,IE)  = MAX(0._rkind,KTMP(2))
(file: wwm_fluctsplit.F90, line:    2929)
  MAX, dummy argument no  1 (A1)
**[631 E] invalid argument type length for intrinsic procedure
          (All arguments must have the same type length)
   2930  KELEM(3,IE)  = MAX(0._rkind,KTMP(3))
(file: wwm_fluctsplit.F90, line:    2930)
  MAX, dummy argument no  1 (A1)
**[631 E] invalid argument type length for intrinsic procedure
          (All arguments must have the same type length)
   2962  U(IS,ID,IP) = MAX(0.0_rkind,U(IS,ID,IP)-DT4AI/SI(IP)*ST*IOBWB(IP))*IOBPD(ID,IP)
(file: wwm_fluctsplit.F90, line:    2962)
  MAX, dummy argument no  1 (A1)
**[631 E] invalid argument type length for intrinsic procedure
          (All arguments must have the same type length)

   -- file: wwm_gridcf.F90

      - program unit: SPATIAL_GRID

      - program unit: INIT_SPECTRAL_GRID

      - program unit: DEALLOC_SPECTRAL_GRID

   -- file: wwm_mjdv2.F90

      - program unit: CT2MJD

      - program unit: MJD2CT

      - program unit: CU2SEC

      - program unit: MJDYMD

   -- file: wwm_nums1d.F90

      - program unit: COMPUTE_ADVECTION1D_QUICKEST_A

      - program unit: QUICKEST_ADV
    106  IXYC = IXY - INC * INT( MIN( ZERO, SIGN(1.1_rkind,CFL) ) )
(file: wwm_nums1d.F90, line:     106)
  SIGN, dummy argument no  1 (A)
**[631 E] invalid argument type length for intrinsic procedure
          (All arguments must have the same type length)
    108  IXYU = IXYC - INC * INT( SIGN(1.1_rkind,CFL) )
(file: wwm_nums1d.F90, line:     108)
  SIGN, dummy argument no  1 (A)
**[631 E] invalid argument type length for intrinsic procedure
          (All arguments must have the same type length)
    111  DQNZ = SIGN( MAX(10E-15_rkind, ABS(DQ)), DQ )
(file: wwm_nums1d.F90, line:     111)
  MAX, dummy argument no  1 (A1)
**[631 E] invalid argument type length for intrinsic procedure
          (All arguments must have the same type length)
    113  QCN  = MIN( 1.1_rkind, MAX( -0.1_rkind, QCN ) )
(file: wwm_nums1d.F90, line:     113)
  MAX, dummy argument no  1 (A1)
**[631 E] invalid argument type length for intrinsic procedure
          (All arguments must have the same type length)
(file: wwm_nums1d.F90, line:     113)
  MIN, dummy argument no  1 (A1)
**[631 E] invalid argument type length for intrinsic procedure
          (All arguments must have the same type length)
    115  QBN  = MIN( QBN, ONE, QCN/MAX( 1.0E-10_rkind, ABS(CFL) ) )
(file: wwm_nums1d.F90, line:     115)
  MAX, dummy argument no  1 (A1)
**[631 E] invalid argument type length for intrinsic procedure
          (All arguments must have the same type length)
    126  IXYC = IXY - INC * INT(MIN(ZERO, SIGN(1.1_rkind,CFL) ) )
(file: wwm_nums1d.F90, line:     126)
  SIGN, dummy argument no  1 (A)
**[631 E] invalid argument type length for intrinsic procedure
          (All arguments must have the same type length)
    133  IXYC = IXY - INC * INT(MIN(ZERO, SIGN(1.1_rkind,CFL) ) )
(file: wwm_nums1d.F90, line:     133)
  SIGN, dummy argument no  1 (A)
**[631 E] invalid argument type length for intrinsic procedure
          (All arguments must have the same type length)

      - program unit: QUICKEST_VAR_ADV
    162  IXYC   = IXY - 1 * INT(MIN(ZERO , SIGN(1.1_rkind,CFL) ) )
(file: wwm_nums1d.F90, line:     162)
  SIGN, dummy argument no  1 (A)
**[631 E] invalid argument type length for intrinsic procedure
          (All arguments must have the same type length)
    165  IXYU   = IXYC - 1 * INT ( SIGN (1.1_rkind,CFL) )
(file: wwm_nums1d.F90, line:     165)
  SIGN, dummy argument no  1 (A)
**[631 E] invalid argument type length for intrinsic procedure
          (All arguments must have the same type length)
    168  DQNZ   = SIGN ( MAX(10E-10_rkind,ABS(DQ)) , DQ )
(file: wwm_nums1d.F90, line:     168)
  MAX, dummy argument no  1 (A1)
**[631 E] invalid argument type length for intrinsic procedure
          (All arguments must have the same type length)
    170  QCN    = MIN ( 1.1_rkind, MAX ( -0.1_rkind , QCN ) )
(file: wwm_nums1d.F90, line:     170)
  MAX, dummy argument no  1 (A1)
**[631 E] invalid argument type length for intrinsic procedure
          (All arguments must have the same type length)
(file: wwm_nums1d.F90, line:     170)
  MIN, dummy argument no  1 (A1)
**[631 E] invalid argument type length for intrinsic procedure
          (All arguments must have the same type length)
    172  QBN    = MIN ( QBN , ONE , QCN/MAX(10E-10_rkind,ABS(CFL)) )
(file: wwm_nums1d.F90, line:     172)
  MAX, dummy argument no  1 (A1)
**[631 E] invalid argument type length for intrinsic procedure
          (All arguments must have the same type length)
    180  IXYC = IXY - 1 * INT( MIN(ZERO, SIGN(1.1_rkind,CS(IXY)) ) )
(file: wwm_nums1d.F90, line:     180)
  SIGN, dummy argument no  1 (A)
**[631 E] invalid argument type length for intrinsic procedure
          (All arguments must have the same type length)

      - program unit: QUICKEST_DIR
    225  IXYC = IXY - INC * INT(MIN(ZERO, SIGN(1.1_rkind,CFL) ) )
(file: wwm_nums1d.F90, line:     225)
  SIGN, dummy argument no  1 (A)
**[631 E] invalid argument type length for intrinsic procedure
          (All arguments must have the same type length)
    227  IXYU = IXYC - INC * INT( SIGN(1.1_rkind,CFL) )
(file: wwm_nums1d.F90, line:     227)
  SIGN, dummy argument no  1 (A)
**[631 E] invalid argument type length for intrinsic procedure
          (All arguments must have the same type length)
    230  DQNZ = SIGN( MAX(10E-15_rkind, ABS(DQ)), DQ )
(file: wwm_nums1d.F90, line:     230)
  MAX, dummy argument no  1 (A1)
**[631 E] invalid argument type length for intrinsic procedure
          (All arguments must have the same type length)
    232  QCN  = MIN( 1.1_rkind, MAX( -0.1_rkind, QCN ) )
(file: wwm_nums1d.F90, line:     232)
  MAX, dummy argument no  1 (A1)
**[631 E] invalid argument type length for intrinsic procedure
          (All arguments must have the same type length)
(file: wwm_nums1d.F90, line:     232)
  MIN, dummy argument no  1 (A1)
**[631 E] invalid argument type length for intrinsic procedure
          (All arguments must have the same type length)
    234  QBN  = MIN( QBN, ONE, QCN/MAX( 1.0E-10_rkind, ABS(CFL) ) )
(file: wwm_nums1d.F90, line:     234)
  MAX, dummy argument no  1 (A1)
**[631 E] invalid argument type length for intrinsic procedure
          (All arguments must have the same type length)
    246  IXYC = IXY - INC * INT( MIN(ZERO, SIGN(1.1_rkind,CFL) ) )
(file: wwm_nums1d.F90, line:     246)
  SIGN, dummy argument no  1 (A)
**[631 E] invalid argument type length for intrinsic procedure
          (All arguments must have the same type length)
    253  IXYC = IXY - INC * INT( MIN(ZERO, SIGN(1.1_rkind,CFL) ) )
(file: wwm_nums1d.F90, line:     253)
  SIGN, dummy argument no  1 (A)
**[631 E] invalid argument type length for intrinsic procedure
          (All arguments must have the same type length)

      - program unit: QUICKEST_FREQ
    295  IXYC   = IXY - 1 * INT(MIN(ZERO , SIGN(1.1_rkind,CFL) ) )
(file: wwm_nums1d.F90, line:     295)
  SIGN, dummy argument no  1 (A)
**[631 E] invalid argument type length for intrinsic procedure
          (All arguments must have the same type length)
    299  IXYU   = IXYC - 1 * INT ( SIGN (1.1_rkind,CFL) )
(file: wwm_nums1d.F90, line:     299)
  SIGN, dummy argument no  1 (A)
**[631 E] invalid argument type length for intrinsic procedure
          (All arguments must have the same type length)
    302  DQNZ   = SIGN ( MAX(1.E-15_rkind,ABS(DQ)) , DQ )
(file: wwm_nums1d.F90, line:     302)
  MAX, dummy argument no  1 (A1)
**[631 E] invalid argument type length for intrinsic procedure
          (All arguments must have the same type length)
    304  QCN    = MIN ( 1.1_rkind, MAX ( -0.1_rkind , QCN ) )
(file: wwm_nums1d.F90, line:     304)
  MAX, dummy argument no  1 (A1)
**[631 E] invalid argument type length for intrinsic procedure
          (All arguments must have the same type length)
(file: wwm_nums1d.F90, line:     304)
  MIN, dummy argument no  1 (A1)
**[631 E] invalid argument type length for intrinsic procedure
          (All arguments must have the same type length)
    306  QBN    = MIN ( QBN , ONE , QCN/MAX(1.E-10_rkind,ABS(CFL)) )
(file: wwm_nums1d.F90, line:     306)
  MAX, dummy argument no  1 (A1)
**[631 E] invalid argument type length for intrinsic procedure
          (All arguments must have the same type length)
    316  IXYC = IXY - 1 * INT( MIN( 0.0_rkind, SIGN(1.1_rkind,CFL) ) )
(file: wwm_nums1d.F90, line:     316)
  SIGN, dummy argument no  1 (A)
**[631 E] invalid argument type length for intrinsic procedure
          (All arguments must have the same type length)
(file: wwm_nums1d.F90, line:     316)
  MIN, dummy argument no  1 (A1)
**[631 E] invalid argument type length for intrinsic procedure
          (All arguments must have the same type length)
    322  IXYC = IXY - 1 * INT( MIN( 0.0_rkind, SIGN(1.1_rkind,CFL) ) )
(file: wwm_nums1d.F90, line:     322)
  SIGN, dummy argument no  1 (A)
**[631 E] invalid argument type length for intrinsic procedure
          (All arguments must have the same type length)
(file: wwm_nums1d.F90, line:     322)
  MIN, dummy argument no  1 (A1)
**[631 E] invalid argument type length for intrinsic procedure
          (All arguments must have the same type length)

   -- file: wwm_numsigma.F90

      - program unit: COMPUTE_FREQUENCY_QUICKEST_A
     37  REST  = ABS(MOD(CFLCAS,1.0_rkind))
(file: wwm_numsigma.F90, line:      37)
  MOD, dummy argument no  2 (P)
**[631 E] invalid argument type length for intrinsic procedure
          (All arguments must have the same type length)
     70  AC2(IP,:,ID) = MAX(0._rkind,ACQ(1:MSC))
(file: wwm_numsigma.F90, line:      70)
  MAX, dummy argument no  1 (A1)
**[631 E] invalid argument type length for intrinsic procedure
          (All arguments must have the same type length)

      - program unit: PROPSIGMA

   -- file: wwm_numtheta.F90

      - program unit: COMPUTE_DIRECTION_CNTG_A
     35  REST  = ABS(MOD(CFLCAD,1.0_rkind))
(file: wwm_numtheta.F90, line:      35)
  MOD, dummy argument no  2 (P)
**[631 E] invalid argument type length for intrinsic procedure
          (All arguments must have the same type length)

      - program unit: COMPUTE_DIRECTION_QUICKEST_A
    104  REST  = ABS(MOD(CFLCAD,1.0_rkind))
(file: wwm_numtheta.F90, line:     104)
  MOD, dummy argument no  2 (P)
**[631 E] invalid argument type length for intrinsic procedure
          (All arguments must have the same type length)

      - program unit: COMPUTE_DIRECTION_UPWIND_A
    145  REST  = ABS(MOD(CFLCAD,1._rkind))
(file: wwm_numtheta.F90, line:     145)
  MOD, dummy argument no  2 (P)
**[631 E] invalid argument type length for intrinsic procedure
          (All arguments must have the same type length)
    147  REST  = ABS(MOD(CFLCAD,1._rkind))
(file: wwm_numtheta.F90, line:     147)
  MOD, dummy argument no  2 (P)
**[631 E] invalid argument type length for intrinsic procedure
          (All arguments must have the same type length)
    167  AC2(IP,IS,:) = MAX(0._rkind,U0(:))
(file: wwm_numtheta.F90, line:     167)
  MAX, dummy argument no  1 (A1)
**[631 E] invalid argument type length for intrinsic procedure
          (All arguments must have the same type length)

      - program unit: COMPUTE_DIRECTION_WENO_A

      - program unit: PROPTHETA

   -- file: wwm_parall_solver.F90

      - program unit: WWM_PARALL_SOLVER

   -- file: wwm_petsc_block.F90

   -- file: wwm_petsc_controller.F90

   -- file: wwm_petsc_parallel.F90

   -- file: wwm_petscpool.F90

   -- file: wwm_petsc_seriell.F90

   -- file: wwm_radiation.F90

      - program unit: RADIATION_STRESS_SHYFEM

   -- file: wwm_snl3.F90

      - program unit: TRIADSWAN
     96  SA(IS,ID) = MAX(0._rkind, FT * ( EM * EM - 2. * EM * E0 ))
(file: wwm_snl3.F90, line:      96)
  MAX, dummy argument no  1 (A1)
**[631 E] invalid argument type length for intrinsic procedure
          (All arguments must have the same type length)

      - program unit: TRIAD_DINGEMANS

      - program unit: D20

      - program unit: DISPU2

   -- file: wwm_snl42.F90

      - program unit: PARAMETER4SNL2

      - program unit: SNL412
    271  AUX    = MAX(DEP(IP)*KMESPC,1.3_rkind)
(file: wwm_snl42.F90, line:     271)
  MAX, dummy argument no  2 (A2)
**[631 E] invalid argument type length for intrinsic procedure
          (All arguments must have the same type length)
    272  AUX2   = MAX ( -1.E15_rkind, SNLCS3*AUX)
(file: wwm_snl42.F90, line:     272)
  MAX, dummy argument no  1 (A1)
**[631 E] invalid argument type length for intrinsic procedure
          (All arguments must have the same type length)

      - program unit: SNL422
    489  AUX    = MAX(DEP(IP)*KMESPC,1.3_rkind)
(file: wwm_snl42.F90, line:     489)
  MAX, dummy argument no  2 (A2)
**[631 E] invalid argument type length for intrinsic procedure
          (All arguments must have the same type length)
    490  AUX2   = MAX ( -1.E15_rkind, SNLCS3*AUX)
(file: wwm_snl42.F90, line:     490)
  MAX, dummy argument no  1 (A1)
**[631 E] invalid argument type length for intrinsic procedure
          (All arguments must have the same type length)
    610  IMATDA(IS,ID) = IMATDA(IS,ID) - SFNL(IS,ID) / MAX(10E-8_rkind,ACLOC(IS,ID)*SIGPI2)
(file: wwm_snl42.F90, line:     610)
  MAX, dummy argument no  1 (A1)
**[631 E] invalid argument type length for intrinsic procedure
          (All arguments must have the same type length)
    614  IMATDA(IS,ID) = IMATDA(IS,ID) + SFNL(IS,ID) / MAX(10E-8_rkind,ACLOC(IS,ID)*SIGPI2)
(file: wwm_snl42.F90, line:     614)
  MAX, dummy argument no  1 (A1)
**[631 E] invalid argument type length for intrinsic procedure
          (All arguments must have the same type length)

      - program unit: SNL432
    694  AUX    = MAX(DEP(IP)*KMESPC,1.3_rkind)
(file: wwm_snl42.F90, line:     694)
  MAX, dummy argument no  2 (A2)
**[631 E] invalid argument type length for intrinsic procedure
          (All arguments must have the same type length)
    695  AUX2   = MAX ( -1.E15_rkind, SNLCS3*AUX)
(file: wwm_snl42.F90, line:     695)
  MAX, dummy argument no  1 (A1)
**[631 E] invalid argument type length for intrinsic procedure
          (All arguments must have the same type length)
    796  IMATDA(I,ID) = IMATDA(I,ID) - SFNL(I,ID) / MAX(10E-8_rkind,ACLOC(I,ID)*SIGPI)
(file: wwm_snl42.F90, line:     796)
  MAX, dummy argument no  1 (A1)
**[631 E] invalid argument type length for intrinsic procedure
          (All arguments must have the same type length)
    800  IMATDA(I,ID) = IMATDA(I,ID) + SFNL(I,ID) / MAX(10E-8_rkind,ACLOC(I,ID)*SIGPI)
(file: wwm_snl42.F90, line:     800)
  MAX, dummy argument no  1 (A1)
**[631 E] invalid argument type length for intrinsic procedure
          (All arguments must have the same type length)

   -- file: wwm_snl4.F90

      - program unit: PARAMETER4SNL

      - program unit: SNL4
    241  AUX    = MAX(DEP(IP)*KMESPC,1.363_rkind)
(file: wwm_snl4.F90, line:     241)
  MAX, dummy argument no  2 (A2)
**[631 E] invalid argument type length for intrinsic procedure
          (All arguments must have the same type length)
    242  AUX2   = MAX ( -1.E15_rkind, SNLCS3*AUX)
(file: wwm_snl4.F90, line:     242)
  MAX, dummy argument no  1 (A1)
**[631 E] invalid argument type length for intrinsic procedure
          (All arguments must have the same type length)
    362  IMATDA(IS,ID) = IMATDA(IS,ID) - SFNL(IS,ID) / MAX(10E-8_rkind,ACLOC(IS,ID)*SIGPI2)
(file: wwm_snl4.F90, line:     362)
  MAX, dummy argument no  1 (A1)
**[631 E] invalid argument type length for intrinsic procedure
          (All arguments must have the same type length)
    366  IMATDA(IS,ID) = IMATDA(IS,ID) + SFNL(IS,ID) / MAX(10E-8_rkind,ACLOC(IS,ID)*SIGPI2)
(file: wwm_snl4.F90, line:     366)
  MAX, dummy argument no  1 (A1)
**[631 E] invalid argument type length for intrinsic procedure
          (All arguments must have the same type length)

   -- file: wwm_sparskit.F90

      - program unit: BCGSTAB

      - program unit: GMRES

      - program unit: IMPLU

      - program unit: UPPDIR

      - program unit: GIVENS

      - program unit: STOPBIS

      - program unit: TIDYCG

      - program unit: BRKDN

      - program unit: BISINIT

      - program unit: MGSRO

      - program unit: AMUX

      - program unit: AMUXMS

      - program unit: ATMUX

      - program unit: ATMUXR

      - program unit: AMUXE

      - program unit: AMUXD

      - program unit: AMUXJ

      - program unit: VBRMV

      - program unit: LSOL

      - program unit: LDSOL

      - program unit: LSOLC

      - program unit: LDSOLC

      - program unit: LDSOLL

      - program unit: USOL

      - program unit: UDSOL

      - program unit: USOLC

      - program unit: UDSOLC

      - program unit: LUSOL

      - program unit: LUTSOL

      - program unit: QSPLIT

      - program unit: RUNRC

      - program unit: ILUT

      - program unit: ILU0

      - program unit: SOR

      - program unit: PGMRES

      - program unit: DISTDOT

   -- file: wwm_specparam.F90

      - program unit: PARAMENG

      - program unit: STOKES_DRIFT_SURFACE_BAROTROPIC

      - program unit: STOKES_DRIFT_SURFACE_BAROTROPIC_LOC

      - program unit: MEAN_WAVE_PARAMETER

      - program unit: MEAN_PARAMETER

      - program unit: MEAN_WAVE_PARAMETER_LOC

      - program unit: WAVE_CURRENT_PARAMETER

      - program unit: WAVE_CURRENT_PARAMETER_LOC

      - program unit: URSELL_NUMBER

      - program unit: WINDSEASWELLSEP

      - program unit: PEAK_PARAMETER

      - program unit: PEAK_PARAMETER_LOC

      - program unit: MEAN_DIRECTION_AND_SPREAD

      - program unit: MEAN_DIRECTION_AND_SPREAD_LOC

      - program unit: MEAN_PARAMETER_LOC

      - program unit: MEAN_FREQS

      - program unit: MEAN_WAVEN

   -- file: wwm_windinput.F90

      - program unit: SET_WIND

      - program unit: SET_FRICTION
     65  UFRIC(IP) = MAX(1.0E-15_rkind,UFRIC(IP))
(file: wwm_windinput.F90, line:      65)
  MAX, dummy argument no  1 (A1)
**[631 E] invalid argument type length for intrinsic procedure
          (All arguments must have the same type length)
    103  fU10 = 0.02_rkind * MAX(0._rkind,
    104              TANH(0.075_rkind*WIND10 - 0.75_rkind))
(file: wwm_windinput.F90, line:     104)
  MAX, dummy argument no  1 (A1)
**[631 E] invalid argument type length for intrinsic procedure
          (All arguments must have the same type length)
    114  Ur   = MAX (0.0_rkind, ULur - CP_W)
(file: wwm_windinput.F90, line:     114)
  MAX, dummy argument no  1 (A1)
**[631 E] invalid argument type length for intrinsic procedure
          (All arguments must have the same type length)

      - program unit: SIN_LIN_CAV
    189  AUX1 = MIN( 2.0_rkind, FPM / SPSIG(IS) )
(file: wwm_windinput.F90, line:     189)
  MIN, dummy argument no  1 (A1)
**[631 E] invalid argument type length for intrinsic procedure
          (All arguments must have the same type length)
    193  AUX2 = ( UFRIC(IP) * MAX( 0._rkind , COS(SPDIR(ID)-WINDTH) ) )**4
(file: wwm_windinput.F90, line:     193)
  MAX, dummy argument no  1 (A1)
**[631 E] invalid argument type length for intrinsic procedure
          (All arguments must have the same type length)
    194  SWINA = MAX(0._rkind,AUX * AUX2 * AUXH)
(file: wwm_windinput.F90, line:     194)
  MAX, dummy argument no  1 (A1)
**[631 E] invalid argument type length for intrinsic procedure
          (All arguments must have the same type length)

      - program unit: SIN_EXP_KOMEN
    231  SWINB = MAX( 0.0_rkind, SWINB * SPSIG(IS) )
(file: wwm_windinput.F90, line:     231)
  MAX, dummy argument no  1 (A1)
**[631 E] invalid argument type length for intrinsic procedure
          (All arguments must have the same type length)

      - program unit: SIN_MAKIN

      - program unit: PREPARE_SOURCE

      - program unit: AIRSEA_ECMWF
    378  DELI1   = MIN(1.0_rkind,XII - DBLE(I))
(file: wwm_windinput.F90, line:     378)
  MIN, dummy argument no  1 (A1)
**[631 E] invalid argument type length for intrinsic procedure
          (All arguments must have the same type length)
    382  DELJ1   = MIN(1.0_rkind,XJJ - DBLE(J))
(file: wwm_windinput.F90, line:     382)
  MIN, dummy argument no  1 (A1)
**[631 E] invalid argument type length for intrinsic procedure
          (All arguments must have the same type length)
    389  SQRTCDM1  = MIN(WIND10/UFRIC(IP),100.0_rkind)
(file: wwm_windinput.F90, line:     389)
  MIN, dummy argument no  2 (A2)
**[631 E] invalid argument type length for intrinsic procedure
          (All arguments must have the same type length)

      - program unit: STRESSO_ECMWF
    440  UST      = MAX(UFRIC(IP),0.000001_rkind)
(file: wwm_windinput.F90, line:     440)
  MAX, dummy argument no  2 (A2)
**[631 E] invalid argument type length for intrinsic procedure
          (All arguments must have the same type length)
    446  DELI1    = MIN (1.0_rkind ,XII - DBLE(I))
(file: wwm_windinput.F90, line:     446)
  MIN, dummy argument no  1 (A1)
**[631 E] invalid argument type length for intrinsic procedure
          (All arguments must have the same type length)
    452  DELJ1    = MAX(MIN (1._rkind , XJJ-DBLE(J)),0._rkind)
(file: wwm_windinput.F90, line:     452)
  MIN, dummy argument no  1 (A1)
**[631 E] invalid argument type length for intrinsic procedure
          (All arguments must have the same type length)
(file: wwm_windinput.F90, line:     452)
  MAX, dummy argument no  2 (A2)
**[631 E] invalid argument type length for intrinsic procedure
          (All arguments must have the same type length)
    459  TEMP = TEMP + ACLOC(MSC,ID) * MAX(0._rkind,COS(SPDIR(ID)-WINDTH))**3
(file: wwm_windinput.F90, line:     459)
  MAX, dummy argument no  1 (A1)
**[631 E] invalid argument type length for intrinsic procedure
          (All arguments must have the same type length)
    472  TAUTOT(IP) = MAX(TAUTOT(IP),0._rkind)
(file: wwm_windinput.F90, line:     472)
  MAX, dummy argument no  2 (A2)
**[631 E] invalid argument type length for intrinsic procedure
          (All arguments must have the same type length)

      - program unit: SIN_ECMWF

      - program unit: STRESS_ECMWF

      - program unit: TAUHFR_ECMWF
    625  UST      = MAX(DBLE(K)*DELUST,0.000001_rkind)
(file: wwm_windinput.F90, line:     625)
  MAX, dummy argument no  2 (A2)
**[631 E] invalid argument type length for intrinsic procedure
          (All arguments must have the same type length)
    629  DELY     = MAX((1._rkind-YC)/DBLE(JTOT),0._rkind)
(file: wwm_windinput.F90, line:     629)
  MAX, dummy argument no  2 (A2)
**[631 E] invalid argument type length for intrinsic procedure
          (All arguments must have the same type length)
    636  ZARG         = MIN(XKAPPA/ZX,20._rkind)
(file: wwm_windinput.F90, line:     636)
  MIN, dummy argument no  2 (A2)
**[631 E] invalid argument type length for intrinsic procedure
          (All arguments must have the same type length)

   -- file: /home/aron/Work/Quellen/Bibliotheken/NETCDF/netcdf-3.6.3/f90/netcdf.f90

      - program unit: NETCDF

         - module subprogram: NF90_INQ_LIBVERS

         - module subprogram: NF90_STRERROR

         - module subprogram: NF90_INQ_BASE_PE

         - module subprogram: NF90_SET_BASE_PE

         - module subprogram: NF90_CREATE

         - module subprogram: NF90_CREATE_MP

         - module subprogram: NF90_OPEN

         - module subprogram: NF90_OPEN_MP

         - module subprogram: NF90_SET_FILL

         - module subprogram: NF90_REDEF

         - module subprogram: NF90_ENDDEF

         - module subprogram: NF90_SYNC

         - module subprogram: NF90_ABORT

         - module subprogram: NF90_CLOSE

         - module subprogram: NF90_DELETE

         - module subprogram: NF90_INQUIRE

         - module subprogram: NF90_DEF_DIM

         - module subprogram: NF90_INQ_DIMID

         - module subprogram: NF90_RENAME_DIM

         - module subprogram: NF90_INQUIRE_DIMENSION

         - module subprogram: NF90_COPY_ATT

         - module subprogram: NF90_RENAME_ATT

         - module subprogram: NF90_DEL_ATT

         - module subprogram: NF90_INQ_ATTNAME

         - module subprogram: NF90_INQUIRE_ATTRIBUTE

         - module subprogram: NF90_PUT_ATT_TEXT

         - module subprogram: NF90_GET_ATT_TEXT

         - module subprogram: NF90_PUT_ATT_ONEBYTEINT

         - module subprogram: NF90_PUT_ATT_ONE_ONEBYTEINT

         - module subprogram: NF90_GET_ATT_ONEBYTEINT

         - module subprogram: NF90_GET_ATT_ONE_ONEBYTEINT

         - module subprogram: NF90_PUT_ATT_TWOBYTEINT

         - module subprogram: NF90_PUT_ATT_ONE_TWOBYTEINT

         - module subprogram: NF90_GET_ATT_TWOBYTEINT

         - module subprogram: NF90_GET_ATT_ONE_TWOBYTEINT

         - module subprogram: NF90_PUT_ATT_FOURBYTEINT

         - module subprogram: NF90_PUT_ATT_ONE_FOURBYTEINT

         - module subprogram: NF90_GET_ATT_FOURBYTEINT

         - module subprogram: NF90_GET_ATT_ONE_FOURBYTEINT

         - module subprogram: NF90_PUT_ATT_EIGHTBYTEINT

         - module subprogram: NF90_PUT_ATT_ONE_EIGHTBYTEINT

         - module subprogram: NF90_GET_ATT_EIGHTBYTEINT

         - module subprogram: NF90_GET_ATT_ONE_EIGHTBYTEINT

         - module subprogram: NF90_PUT_ATT_FOURBYTEREAL

         - module subprogram: NF90_PUT_ATT_ONE_FOURBYTEREAL

         - module subprogram: NF90_GET_ATT_FOURBYTEREAL

         - module subprogram: NF90_GET_ATT_ONE_FOURBYTEREAL

         - module subprogram: NF90_PUT_ATT_EIGHTBYTEREAL

         - module subprogram: NF90_PUT_ATT_ONE_EIGHTBYTEREAL

         - module subprogram: NF90_GET_ATT_EIGHTBYTEREAL

         - module subprogram: NF90_GET_ATT_ONE_EIGHTBYTEREAL

         - module subprogram: NF90_DEF_VAR_SCALAR

         - module subprogram: NF90_DEF_VAR_ONEDIM

         - module subprogram: NF90_DEF_VAR_MANYDIMS

         - module subprogram: NF90_INQ_VARID

         - module subprogram: NF90_INQUIRE_VARIABLE

         - module subprogram: NF90_RENAME_VAR

         - module subprogram: NF90_PUT_VAR_TEXT

         - module subprogram: NF90_GET_VAR_TEXT

         - module subprogram: NF90_PUT_VAR_1D_TEXT

         - module subprogram: NF90_PUT_VAR_2D_TEXT

         - module subprogram: NF90_PUT_VAR_3D_TEXT

         - module subprogram: NF90_PUT_VAR_4D_TEXT

         - module subprogram: NF90_PUT_VAR_5D_TEXT

         - module subprogram: NF90_PUT_VAR_6D_TEXT

         - module subprogram: NF90_PUT_VAR_7D_TEXT

         - module subprogram: NF90_GET_VAR_1D_TEXT

         - module subprogram: NF90_GET_VAR_2D_TEXT

         - module subprogram: NF90_GET_VAR_3D_TEXT

         - module subprogram: NF90_GET_VAR_4D_TEXT

         - module subprogram: NF90_GET_VAR_5D_TEXT

         - module subprogram: NF90_GET_VAR_6D_TEXT

         - module subprogram: NF90_GET_VAR_7D_TEXT

         - module subprogram: NF90_PUT_VAR_ONEBYTEINT

         - module subprogram: NF90_PUT_VAR_TWOBYTEINT

         - module subprogram: NF90_PUT_VAR_FOURBYTEINT

         - module subprogram: NF90_PUT_VAR_EIGHTBYTEINT

         - module subprogram: NF90_PUT_VAR_FOURBYTEREAL

         - module subprogram: NF90_PUT_VAR_EIGHTBYTEREAL

         - module subprogram: NF90_GET_VAR_ONEBYTEINT

         - module subprogram: NF90_GET_VAR_TWOBYTEINT

         - module subprogram: NF90_GET_VAR_FOURBYTEINT

         - module subprogram: NF90_GET_VAR_EIGHTBYTEINT

         - module subprogram: NF90_GET_VAR_FOURBYTEREAL

         - module subprogram: NF90_GET_VAR_EIGHTBYTEREAL

         - module subprogram: NF90_PUT_VAR_1D_ONEBYTEINT

         - module subprogram: NF90_PUT_VAR_2D_ONEBYTEINT

         - module subprogram: NF90_PUT_VAR_3D_ONEBYTEINT

         - module subprogram: NF90_PUT_VAR_4D_ONEBYTEINT

         - module subprogram: NF90_PUT_VAR_5D_ONEBYTEINT

         - module subprogram: NF90_PUT_VAR_6D_ONEBYTEINT

         - module subprogram: NF90_PUT_VAR_7D_ONEBYTEINT

         - module subprogram: NF90_PUT_VAR_1D_TWOBYTEINT

         - module subprogram: NF90_PUT_VAR_2D_TWOBYTEINT

         - module subprogram: NF90_PUT_VAR_3D_TWOBYTEINT

         - module subprogram: NF90_PUT_VAR_4D_TWOBYTEINT

         - module subprogram: NF90_PUT_VAR_5D_TWOBYTEINT

         - module subprogram: NF90_PUT_VAR_6D_TWOBYTEINT

         - module subprogram: NF90_PUT_VAR_7D_TWOBYTEINT

         - module subprogram: NF90_PUT_VAR_1D_FOURBYTEINT

         - module subprogram: NF90_PUT_VAR_2D_FOURBYTEINT

         - module subprogram: NF90_PUT_VAR_3D_FOURBYTEINT

         - module subprogram: NF90_PUT_VAR_4D_FOURBYTEINT

         - module subprogram: NF90_PUT_VAR_5D_FOURBYTEINT

         - module subprogram: NF90_PUT_VAR_6D_FOURBYTEINT

         - module subprogram: NF90_PUT_VAR_7D_FOURBYTEINT

         - module subprogram: NF90_PUT_VAR_1D_EIGHTBYTEINT

         - module subprogram: NF90_PUT_VAR_2D_EIGHTBYTEINT

         - module subprogram: NF90_PUT_VAR_3D_EIGHTBYTEINT

         - module subprogram: NF90_PUT_VAR_4D_EIGHTBYTEINT

         - module subprogram: NF90_PUT_VAR_5D_EIGHTBYTEINT

         - module subprogram: NF90_PUT_VAR_6D_EIGHTBYTEINT

         - module subprogram: NF90_PUT_VAR_7D_EIGHTBYTEINT

         - module subprogram: NF90_PUT_VAR_1D_FOURBYTEREAL

         - module subprogram: NF90_PUT_VAR_2D_FOURBYTEREAL

         - module subprogram: NF90_PUT_VAR_3D_FOURBYTEREAL

         - module subprogram: NF90_PUT_VAR_4D_FOURBYTEREAL

         - module subprogram: NF90_PUT_VAR_5D_FOURBYTEREAL

         - module subprogram: NF90_PUT_VAR_6D_FOURBYTEREAL

         - module subprogram: NF90_PUT_VAR_7D_FOURBYTEREAL

         - module subprogram: NF90_PUT_VAR_1D_EIGHTBYTEREAL

         - module subprogram: NF90_PUT_VAR_2D_EIGHTBYTEREAL

         - module subprogram: NF90_PUT_VAR_3D_EIGHTBYTEREAL

         - module subprogram: NF90_PUT_VAR_4D_EIGHTBYTEREAL

         - module subprogram: NF90_PUT_VAR_5D_EIGHTBYTEREAL

         - module subprogram: NF90_PUT_VAR_6D_EIGHTBYTEREAL

         - module subprogram: NF90_PUT_VAR_7D_EIGHTBYTEREAL

         - module subprogram: NF90_GET_VAR_1D_ONEBYTEINT

         - module subprogram: NF90_GET_VAR_2D_ONEBYTEINT

         - module subprogram: NF90_GET_VAR_3D_ONEBYTEINT

         - module subprogram: NF90_GET_VAR_4D_ONEBYTEINT

         - module subprogram: NF90_GET_VAR_5D_ONEBYTEINT

         - module subprogram: NF90_GET_VAR_6D_ONEBYTEINT

         - module subprogram: NF90_GET_VAR_7D_ONEBYTEINT

         - module subprogram: NF90_GET_VAR_1D_TWOBYTEINT

         - module subprogram: NF90_GET_VAR_2D_TWOBYTEINT

         - module subprogram: NF90_GET_VAR_3D_TWOBYTEINT

         - module subprogram: NF90_GET_VAR_4D_TWOBYTEINT

         - module subprogram: NF90_GET_VAR_5D_TWOBYTEINT

         - module subprogram: NF90_GET_VAR_6D_TWOBYTEINT

         - module subprogram: NF90_GET_VAR_7D_TWOBYTEINT

         - module subprogram: NF90_GET_VAR_1D_FOURBYTEINT

         - module subprogram: NF90_GET_VAR_2D_FOURBYTEINT

         - module subprogram: NF90_GET_VAR_3D_FOURBYTEINT

         - module subprogram: NF90_GET_VAR_4D_FOURBYTEINT

         - module subprogram: NF90_GET_VAR_5D_FOURBYTEINT

         - module subprogram: NF90_GET_VAR_6D_FOURBYTEINT

         - module subprogram: NF90_GET_VAR_7D_FOURBYTEINT

         - module subprogram: NF90_GET_VAR_1D_EIGHTBYTEINT

         - module subprogram: NF90_GET_VAR_2D_EIGHTBYTEINT

         - module subprogram: NF90_GET_VAR_3D_EIGHTBYTEINT

         - module subprogram: NF90_GET_VAR_4D_EIGHTBYTEINT

         - module subprogram: NF90_GET_VAR_5D_EIGHTBYTEINT

         - module subprogram: NF90_GET_VAR_6D_EIGHTBYTEINT

         - module subprogram: NF90_GET_VAR_7D_EIGHTBYTEINT

         - module subprogram: NF90_GET_VAR_1D_FOURBYTEREAL

         - module subprogram: NF90_GET_VAR_2D_FOURBYTEREAL

         - module subprogram: NF90_GET_VAR_3D_FOURBYTEREAL

         - module subprogram: NF90_GET_VAR_4D_FOURBYTEREAL

         - module subprogram: NF90_GET_VAR_5D_FOURBYTEREAL

         - module subprogram: NF90_GET_VAR_6D_FOURBYTEREAL

         - module subprogram: NF90_GET_VAR_7D_FOURBYTEREAL

         - module subprogram: NF90_GET_VAR_1D_EIGHTBYTEREAL

         - module subprogram: NF90_GET_VAR_2D_EIGHTBYTEREAL

         - module subprogram: NF90_GET_VAR_3D_EIGHTBYTEREAL

         - module subprogram: NF90_GET_VAR_4D_EIGHTBYTEREAL

         - module subprogram: NF90_GET_VAR_5D_EIGHTBYTEREAL

         - module subprogram: NF90_GET_VAR_6D_EIGHTBYTEREAL

         - module subprogram: NF90_GET_VAR_7D_EIGHTBYTEREAL

   -- file: wwm_ardhuin_new.F90

      - program unit: W3SRC4MD_NEW

         - module subprogram: PREPARE_ARDHUIN_NEW

         - module subprogram: READ_INSIN4_NEW

         - module subprogram: W3SPR4_NEW
    497  UNZ    = MAX ( 0.01_rkind , U )
(file: wwm_ardhuin_new.F90, line:     497)
  MAX, dummy argument no  1 (A1)
**[631 E] invalid argument type length for intrinsic procedure
          (All arguments must have the same type length)
    498  USTAR  = MAX ( 0.0001_rkind , USTAR )
(file: wwm_ardhuin_new.F90, line:     498)
  MAX, dummy argument no  1 (A1)
**[631 E] invalid argument type length for intrinsic procedure
          (All arguments must have the same type length)
    549  FMEAN  = INVPI2 * EMEAN / MAX ( 1.E-7_rkind , FMEAN )
(file: wwm_ardhuin_new.F90, line:     549)
  MAX, dummy argument no  1 (A1)
**[631 E] invalid argument type length for intrinsic procedure
          (All arguments must have the same type length)
    553  FMEAN1  = INVPI2 *( MAX ( 1.E-7_rkind , FMEAN1 )
    554             / MAX ( 1.E-7_rkind , EMEAN ))**(1/(2.*WNMEANPTAIL))
(file: wwm_ardhuin_new.F90, line:     553)
  MAX, dummy argument no  1 (A1)
**[631 E] invalid argument type length for intrinsic procedure
          (All arguments must have the same type length)
(file: wwm_ardhuin_new.F90, line:     554)
  MAX, dummy argument no  1 (A1)
**[631 E] invalid argument type length for intrinsic procedure
          (All arguments must have the same type length)
    556  WNMEAN = ( MAX ( 1.E-7_rkind , WNMEAN )
    557            / MAX ( 1.E-7_rkind , EMEAN ) )**(1/WNMEANP)
(file: wwm_ardhuin_new.F90, line:     556)
  MAX, dummy argument no  1 (A1)
**[631 E] invalid argument type length for intrinsic procedure
          (All arguments must have the same type length)
(file: wwm_ardhuin_new.F90, line:     557)
  MAX, dummy argument no  1 (A1)
**[631 E] invalid argument type length for intrinsic procedure
          (All arguments must have the same type length)
    561  FMEANWS  = INVPI2 *( MAX ( 1.E-7_rkind , FMEANWS )
    562          / MAX ( 1.E-7_rkind , EMEANWS ))**(1/(2.*WNMEANPTAIL))
(file: wwm_ardhuin_new.F90, line:     561)
  MAX, dummy argument no  1 (A1)
**[631 E] invalid argument type length for intrinsic procedure
          (All arguments must have the same type length)
(file: wwm_ardhuin_new.F90, line:     562)
  MAX, dummy argument no  1 (A1)
**[631 E] invalid argument type length for intrinsic procedure
          (All arguments must have the same type length)
    571  UNZ    = MAX ( 0.01_rkind , U )
(file: wwm_ardhuin_new.F90, line:     571)
  MAX, dummy argument no  1 (A1)
**[631 E] invalid argument type length for intrinsic procedure
          (All arguments must have the same type length)

         - module subprogram: W3SIN4_NEW
    733  Z0VISC = 0.1_rkind*nu_air/MAX(USTAR,0.0001_rkind)
(file: wwm_ardhuin_new.F90, line:     733)
  MAX, dummy argument no  2 (A2)
**[631 E] invalid argument type length for intrinsic procedure
          (All arguments must have the same type length)
    770  XI=(LOG10(MAX(AORB/Z0NOZ,3._rkind))-ABMIN)/DELAB
(file: wwm_ardhuin_new.F90, line:     770)
  MAX, dummy argument no  2 (A2)
**[631 E] invalid argument type length for intrinsic procedure
          (All arguments must have the same type length)
    820  USTP=MIN((TAUPX**2+TAUPY**2)**0.25,MAX(UST,0.3_rkind))
(file: wwm_ardhuin_new.F90, line:     820)
  MAX, dummy argument no  2 (A2)
**[631 E] invalid argument type length for intrinsic procedure
          (All arguments must have the same type length)
   1005  XJ=MAX(ZERO,(G9*Z0/MAX(UST,0.00001_rkind)**2-AALPHA) / DELALP)
(file: wwm_ardhuin_new.F90, line:    1005)
  MAX, dummy argument no  2 (A2)
**[631 E] invalid argument type length for intrinsic procedure
          (All arguments must have the same type length)

         - module subprogram: INSIN4_NEW

         - module subprogram: TABU_STRESS_NEW

         - module subprogram: TABU_TAUHF_NEW
   1577  UST      = MAX(DBLE(K)*DELUST,0.000001_rkind)
(file: wwm_ardhuin_new.F90, line:    1577)
  MAX, dummy argument no  2 (A2)
**[631 E] invalid argument type length for intrinsic procedure
          (All arguments must have the same type length)
   1594  ZARG     = MIN(KAPPA/ZX,20.0_rkind)
(file: wwm_ardhuin_new.F90, line:    1594)
  MIN, dummy argument no  2 (A2)
**[631 E] invalid argument type length for intrinsic procedure
          (All arguments must have the same type length)

         - module subprogram: TABU_TAUHF2_NEW
   1718  UST0      = MAX(DBLE(K)*DELUST,0.000001_rkind)
(file: wwm_ardhuin_new.F90, line:    1718)
  MAX, dummy argument no  2 (A2)
**[631 E] invalid argument type length for intrinsic procedure
          (All arguments must have the same type length)
   1741  ZARG     = MIN(KAPPA/ZX,20._rkind)
(file: wwm_ardhuin_new.F90, line:    1741)
  MIN, dummy argument no  2 (A2)
**[631 E] invalid argument type length for intrinsic procedure
          (All arguments must have the same type length)
   1742  ZMU      = MIN(G9*ZZ0/CM**2*EXP(ZARG),1._rkind)
(file: wwm_ardhuin_new.F90, line:    1742)
  MIN, dummy argument no  2 (A2)
**[631 E] invalid argument type length for intrinsic procedure
          (All arguments must have the same type length)
   1748  ZARG     = MIN(KAPPA/ZX,20._rkind)
(file: wwm_ardhuin_new.F90, line:    1748)
  MIN, dummy argument no  2 (A2)
**[631 E] invalid argument type length for intrinsic procedure
          (All arguments must have the same type length)
   1749  ZMU      = MIN(G9*ZZ0/CM**2*EXP(ZARG),1._rkind)
(file: wwm_ardhuin_new.F90, line:    1749)
  MIN, dummy argument no  2 (A2)
**[631 E] invalid argument type length for intrinsic procedure
          (All arguments must have the same type length)
   1750  ZLOG     = MIN(LOG(ZMU),0._rkind)
(file: wwm_ardhuin_new.F90, line:    1750)
  MIN, dummy argument no  2 (A2)
**[631 E] invalid argument type length for intrinsic procedure
          (All arguments must have the same type length)
   1756  UST=SQRT(MAX(TAUW,0._rkind))
(file: wwm_ardhuin_new.F90, line:    1756)
  MAX, dummy argument no  2 (A2)
**[631 E] invalid argument type length for intrinsic procedure
          (All arguments must have the same type length)

         - module subprogram: CALC_USTAR_NEW
   1858  SQRTCDM1  = MIN(WINDSPEED/USTAR,100.0_rkind)
(file: wwm_ardhuin_new.F90, line:    1858)
  MIN, dummy argument no  2 (A2)
**[631 E] invalid argument type length for intrinsic procedure
          (All arguments must have the same type length)

         - module subprogram: W3SDS4_NEW
   2110  X=TANH(MIN(K(IK)*DEPTH,10._rkind))
(file: wwm_ardhuin_new.F90, line:    2110)
  MIN, dummy argument no  2 (A2)
**[631 E] invalid argument type length for intrinsic procedure
          (All arguments must have the same type length)

   -- file: wwm_aux.F90

      - program unit: GRADDEP

      - program unit: GRADCURT

      - program unit: DIFFERENTIATE_XDIR

      - program unit: DIFFERENTIATE_XYDIR

      - program unit: WAVEKCG

      - program unit: MAKE_WAVE_TABLE

      - program unit: ALL_FROM_TABLE

      - program unit: CG_FROM_TABLE

      - program unit: K_FROM_TABLE

      - program unit: WAVE_K_C_CG

      - program unit: CHECK_STEADY

      - program unit: CFLSPEC

      - program unit: TWOD2ONED

      - program unit: ONED2TWOD

      - program unit: GAMMA_FUNC

      - program unit: GAMMLN

      - program unit: VEC2RAD

      - program unit: VEC2DEG

      - program unit: DVEC2RAD

      - program unit: DVEC2DEG

      - program unit: DEG2NAUT
    828  DEG = MOD (DEG, 360.0_rkind)
(file: wwm_aux.F90, line:     828)
  MOD, dummy argument no  2 (P)
**[631 E] invalid argument type length for intrinsic procedure
          (All arguments must have the same type length)
    830  DEG = MOD (DEG, 360.0_rkind) + 360.0_rkind
(file: wwm_aux.F90, line:     830)
  MOD, dummy argument no  2 (P)
**[631 E] invalid argument type length for intrinsic procedure
          (All arguments must have the same type length)

      - program unit: ISNAN

      - program unit: ISINF

      - program unit: ISEQ0

      - program unit: CHKVOL

      - program unit: CHECKCONS

      - program unit: ADVTEST

      - program unit: ERG2WWM

      - program unit: INTELEMENT_COEF

      - program unit: INTELEMENT

      - program unit: INTELEMENT_AC_LOC

      - program unit: INTELEMENT_WW3GLOBAL_LOC

      - program unit: CSEVAL

      - program unit: ERROR

      - program unit: WRINPGRD_XFN

      - program unit: WRINPGRD_SHP

      - program unit: XFNHEADER_1

      - program unit: XFNHEADER_2

      - program unit: RHEADER_NODE

      - program unit: RHEADER_ELEMENT

      - program unit: FIND_ELE

      - program unit: FIND_ELE_WIND

      - program unit: DINTSPEC_Y

      - program unit: DINTSPEC

      - program unit: INTERDIR

      - program unit: INTERLIN

      - program unit: WWM_ABORT

      - program unit: TEST_FILE_EXIST_DIE

      - program unit: GAUS1D

      - program unit: SSORT2

      - program unit: POSITION_BEFORE_POINT

      - program unit: GETSTRING

   -- file: wwm_babanin.F90

      - program unit: SDSBABANIN

         - module subprogram: CALC_SDS
     87  DEDENS=MAX(0.0_rkind,DEDENS)
(file: wwm_babanin.F90, line:      87)
  MAX, dummy argument no  1 (A1)
**[631 E] invalid argument type length for intrinsic procedure
          (All arguments must have the same type length)
    115  NDEDENS=MAX(0.0_rkind,NDEDENS)
(file: wwm_babanin.F90, line:     115)
  MAX, dummy argument no  1 (A1)
**[631 E] invalid argument type length for intrinsic procedure
          (All arguments must have the same type length)
    145  T1=max(0._rkind,T1)
(file: wwm_babanin.F90, line:     145)
  MAX, dummy argument no  1 (A1)
**[631 E] invalid argument type length for intrinsic procedure
          (All arguments must have the same type length)
    146  T2=max(0._rkind,T2)
(file: wwm_babanin.F90, line:     146)
  MAX, dummy argument no  1 (A1)
**[631 E] invalid argument type length for intrinsic procedure
          (All arguments must have the same type length)

         - module subprogram: INTEGRATE

         - module subprogram: CALC_LFACTOR
    364  Cv=max(Cv,0.0_rkind)
(file: wwm_babanin.F90, line:     364)
  MAX, dummy argument no  2 (A2)
**[631 E] invalid argument type length for intrinsic procedure
          (All arguments must have the same type length)
    404  sign_new=sign(1.0_rkind,err)
(file: wwm_babanin.F90, line:     404)
  SIGN, dummy argument no  1 (A)
**[631 E] invalid argument type length for intrinsic procedure
          (All arguments must have the same type length)
    424  sign_new=sign(1.0_rkind,err)
(file: wwm_babanin.F90, line:     424)
  SIGN, dummy argument no  1 (A)
**[631 E] invalid argument type length for intrinsic procedure
          (All arguments must have the same type length)

         - module subprogram: CALC_TAU_NORMAL
    507  Lfactor(IS)=min(1.0_rkind,A(IS))
(file: wwm_babanin.F90, line:     507)
  MIN, dummy argument no  1 (A1)
**[631 E] invalid argument type length for intrinsic procedure
          (All arguments must have the same type length)

         - module subprogram: SSWELL

         - module subprogram: SWIND_DBYB
    678  TEMP4=MAX(0.0_rkind,TEMP4)
(file: wwm_babanin.F90, line:     678)
  MAX, dummy argument no  1 (A1)
**[631 E] invalid argument type length for intrinsic procedure
          (All arguments must have the same type length)

   -- file: wwm_bdcons.F90

      - program unit: SET_IOBPD

      - program unit: GET_BOUNDARY_STATUS

      - program unit: SET_IOBP_NEXTGENERATION

      - program unit: SET_IOBP

      - program unit: SET_IOBPD_BY_DEP

      - program unit: WAVE_BOUNDARY_CONDITION

      - program unit: SPECTRAL_SHAPE
    992  MS = MAX (DSPR**(-2) - 2., 1._rkind)
(file: wwm_bdcons.F90, line:     992)
  MAX, dummy argument no  2 (A2)
**[631 E] invalid argument type length for intrinsic procedure
          (All arguments must have the same type length)

      - program unit: SPECTRUM_INT

      - program unit: SET_WAVE_BOUNDARY

      - program unit: SET_WAVE_BOUNDARY_CONDITION

   -- file: wwm_blasaux.F90

      - program unit: DNRM2

      - program unit: DDOT

      - program unit: DAXPY

   -- file: wwm_compute.F90

      - program unit: COMPUTE_SIMPLE_EXPLICIT

      - program unit: COMPUTE_DOUBLE_STRANG_EXPLICIT

      - program unit: COMPUTE_IMPLICIT

      - program unit: COMPUTE_ITERATIVE_SPLITTING

      - program unit: COMPUTE_DIFFRACTION

      - program unit: COMPUTE_SPATIAL

      - program unit: COMPUTE_DIRECTION

      - program unit: COMPUTE_FREQUENCY

      - program unit: COMPUTE_SOURCES_EXP

      - program unit: COMPUTE_SOURCES_IMP

   -- file: wwm_coupl.F90

      - program unit: INIT_PIPES_TIMOR

      - program unit: PIPE_TIMOR_IN

      - program unit: PIPE_TIMOR_OUT

      - program unit: INIT_PIPES_SHYFEM

      - program unit: PIPE_SHYFEM_IN

      - program unit: PIPE_SHYFEM_OUT

      - program unit: INIT_PIPES_ROMS

      - program unit: PIPE_ROMS_IN

      - program unit: PIPE_ROMS_OUT

   -- file: wwm_hotfile.F90

      - program unit: WWM_HOTFILE_MOD

         - module subprogram: PRE_CREATE_LOCAL_HOTNAME

         - module subprogram: CREATE_LOCAL_HOTNAME

         - module subprogram: READ_AC_SIMPLE

         - module subprogram: DETERMINE_NUMBER_PROC

         - module subprogram: READ_IPLG

         - module subprogram: DEALLOCATE_RECONSARR

         - module subprogram: DETERMINE_NEEDED_HOTFILES

         - module subprogram: INPUT_HOTFILE

         - module subprogram: OUTPUT_HOTFILE

         - module subprogram: INPUT_HOTFILE_BINARY

         - module subprogram: OUTPUT_HOTFILE_BINARY

         - module subprogram: INPUT_HOTFILE_NETCDF

         - module subprogram: OUTPUT_HOTFILE_NETCDF

   -- file: wwm_initio.F90

      - program unit: INIT_ARRAYS

      - program unit: DEALLOC_ARRAYS

      - program unit: INITIALIZE_WWM

      - program unit: BASIC_PARAMETER

      - program unit: INITIATE_WAVE_PARAMETER

      - program unit: INITIAL_CONDITION
    710  HSLESS = MIN(0.21_rkind, 0.00288_rkind*FDLESS**0.45_rkind)
(file: wwm_initio.F90, line:     710)
  MIN, dummy argument no  1 (A1)
**[631 E] invalid argument type length for intrinsic procedure
          (All arguments must have the same type length)

      - program unit: INIT_FILE_HANDLES

      - program unit: INIT_STATION_OUTPUT

      - program unit: READWAVEPARWWM

      - program unit: READWAVEPARFVCOM

      - program unit: READSPEC1D

      - program unit: READSPEC2D

      - program unit: READSPEC2D_WW3INIT1

      - program unit: READSPEC2D_WW3INIT2

      - program unit: READSPEC2D_WW3

      - program unit: GETWW3SPECTRA

      - program unit: SHEPARDINT2D

      - program unit: SPECTRALINT

      - program unit: INTERLIND

      - program unit: ALLOC_SPEC_BND

      - program unit: READWAVEPARWW3

      - program unit: INIT_WAVE_BOUNDARY

      - program unit: SET_HMAX

   -- file: wwm_input.F90

      - program unit: READ_HISTORY_STATION_NAMELIST

      - program unit: READ_MNP_MNE

      - program unit: READ_WWMINPUT

      - program unit: INIT_CURRENT_INPUT

      - program unit: INIT_WATLEV_INPUT

      - program unit: READ_SPATIAL_GRID

      - program unit: CHECK_LOGICS

      - program unit: WRITE_TEST_OUTPUT

      - program unit: INIT_NETCDF_WW3

      - program unit: READ_NETCDF_WW3

      - program unit: INTER_STRUCT_DATA

      - program unit: INTER_STRUCT_BOUNDARY

      - program unit: INTER_STRUCT_DOMAIN

   -- file: wwm_main.F90

      - program unit: UN_STEADY

      - program unit: QUASI_STEADY

      - program unit: IO_1

      - program unit: IO_2

      - program unit: SET_WWMINPULNML

      - program unit: WWMIII_MPI

   -- file: wwm_output.F90

      - program unit: OUTPUT_HISTORY_AND_STATION

      - program unit: WWM_OUTPUT

      - program unit: OUTPUT_HISTORY

      - program unit: OUTPUT_STATION

      - program unit: OUTPUT_HISTORY_XFN

      - program unit: OUTPUT_STE

      - program unit: OUTPUT_STATION_NC

      - program unit: OUTPUT_LINE

      - program unit: CURRPAR

      - program unit: WINDPAR

      - program unit: INTPAR

      - program unit: DEBUG_PRINT_HS_STATS

      - program unit: PAR_COMPLETE

      - program unit: PAR_COMPLETE_LOC

      - program unit: INTPAR_LOC

      - program unit: INTSPEC

      - program unit: OUTPUT_TEST

      - program unit: REPORT_ERROR_INQ

      - program unit: REPORT_ERROR_DEF

      - program unit: CLSPEC
   1829  FF = MIN(1.0_rkind,SQRT(EX**2.0+EY**2.0))
(file: wwm_output.F90, line:    1829)
  MIN, dummy argument no  1 (A1)
**[631 E] invalid argument type length for intrinsic procedure
          (All arguments must have the same type length)

      - program unit: DETERMINE_NEEDED_COMPUTATION

      - program unit: NAMEVARIABLE

      - program unit: WRITE_NETCDF_TIME

      - program unit: WRITE_NETCDF_HEADERS_1

      - program unit: WRITE_PARAM_1

      - program unit: WRITE_PARAM_2

      - program unit: WRITE_NETCDF_HEADERS_STAT_1

      - program unit: WRITE_NETCDF_HEADERS_STAT_2

      - program unit: WRITE_NETCDF_HEADERS_2

      - program unit: HISTORY_NC_PRINTMMA

      - program unit: OUTPUT_HISTORY_NC

   -- file: wwm_sourceterms.F90

      - program unit: SOURCETERMS

      - program unit: ACTION_LIMITER
    452  AC2(IP,IS,ID) = MAX( 0._rkind, OLDAC + NEWDAC )
(file: wwm_sourceterms.F90, line:     452)
  MAX, dummy argument no  1 (A1)
**[631 E] invalid argument type length for intrinsic procedure
          (All arguments must have the same type length)

      - program unit: BREAK_LIMIT

      - program unit: BREAK_LIMIT_ALL

      - program unit: RESCALE_SPECTRUM
    564  AC2(IP,IS,ID) = MAX(0._rkind,AC2(IP,IS,ID))
(file: wwm_sourceterms.F90, line:     564)
  MAX, dummy argument no  1 (A1)
**[631 E] invalid argument type length for intrinsic procedure
          (All arguments must have the same type length)

      - program unit: SETSHALLOW

      - program unit: BREAK_LIMIT2

   -- file: wwm_specint.F90

      - program unit: SOURCE_INT_EXP
     44  CALL INT_IP_DYN(IP, 10, DTMIN_DYN,NDYNITER, ACLOC, NIT_ALL)
(file: wwm_specint.F90, line:      44)
  INT_IP_DYN, dummy argument no  3
**[580 E] argument type length inconsistent with first occurrence
     46  CALL INT_IP_DYN(IP, 1, DTMIN_SIN,   NDYNITER_SIN , ACLOC, NIT_SIN)
(file: wwm_specint.F90, line:      46)
  INT_IP_DYN, dummy argument no  3
**[580 E] argument type length inconsistent with first occurrence
     47  CALL INT_IP_DYN(IP, 2, DTMIN_SNL4,   NDYNITER_SNL4 , ACLOC, NIT_SNL4)
(file: wwm_specint.F90, line:      47)
  INT_IP_DYN, dummy argument no  3
**[580 E] argument type length inconsistent with first occurrence
     48  CALL INT_IP_DYN(IP, 3, DTMIN_SDS,   NDYNITER_SDS , ACLOC, NIT_SDS)
(file: wwm_specint.F90, line:      48)
  INT_IP_DYN, dummy argument no  3
**[580 E] argument type length inconsistent with first occurrence
     49  CALL INT_IP_DYN(IP, 4, DTMIN_SNL3,   NDYNITER_SNL3 , ACLOC, NIT_SNL3)
(file: wwm_specint.F90, line:      49)
  INT_IP_DYN, dummy argument no  3
**[580 E] argument type length inconsistent with first occurrence
     50  CALL INT_IP_DYN(IP, 5, DTMIN_SBR, NDYNITER_SBR , ACLOC, NIT_SBR)
(file: wwm_specint.F90, line:      50)
  INT_IP_DYN, dummy argument no  3
**[580 E] argument type length inconsistent with first occurrence
     51  CALL INT_IP_DYN(IP, 6, DTMIN_SBF,   NDYNITER_SBF , ACLOC, NIT_SBF)
(file: wwm_specint.F90, line:      51)
  INT_IP_DYN, dummy argument no  3
**[580 E] argument type length inconsistent with first occurrence

      - program unit: SOURCE_INT_IMP

      - program unit: INT_IP_STAT
    145  NEWDAC = IMATRA(IS,ID) * DT4S / ( 1.0 - DT4S * MIN(0._rkind,IMATDA(IS,ID)))
(file: wwm_specint.F90, line:     145)
  MIN, dummy argument no  1 (A1)
**[631 E] invalid argument type length for intrinsic procedure
          (All arguments must have the same type length)
    147  ACLOC(IS,ID) = MAX( 0.0_rkind, OLDAC + NEWDAC )
(file: wwm_specint.F90, line:     147)
  MAX, dummy argument no  1 (A1)
**[631 E] invalid argument type length for intrinsic procedure
          (All arguments must have the same type length)

      - program unit: RKS_SP3
    193  NEWDAC = IMATRA(IS,ID) * DTSII / ( 1.0 - DTSII * MIN(0._rkind,IMATDA(IS,ID)) )
(file: wwm_specint.F90, line:     193)
  MIN, dummy argument no  1 (A1)
**[631 E] invalid argument type length for intrinsic procedure
          (All arguments must have the same type length)
    201  ACLOC(IS,ID) = MAX( 0.0_rkind, ACLOC(IS,ID) + NEWDAC )
(file: wwm_specint.F90, line:     201)
  MAX, dummy argument no  1 (A1)
**[631 E] invalid argument type length for intrinsic procedure
          (All arguments must have the same type length)
    212  NEWDAC = IMATRA(IS,ID) * DTSII / ( 1.0 - DTSII * MIN(0._rkind,IMATDA(IS,ID)) )
(file: wwm_specint.F90, line:     212)
  MIN, dummy argument no  1 (A1)
**[631 E] invalid argument type length for intrinsic procedure
          (All arguments must have the same type length)
    220  ACLOC(IS,ID) = MAX( 0._rkind, 0.75_rkind * ACOLD(IS,ID) +  0.25_rkind * ACLOC(IS,ID) + 0.25
_rkind * NEWDAC)
(file: wwm_specint.F90, line:     220)
  MAX, dummy argument no  1 (A1)
**[631 E] invalid argument type length for intrinsic procedure
          (All arguments must have the same type length)
    231  NEWDAC = IMATRA(IS,ID) * DTSII / ( 1.0 - DTSII * MIN(0._rkind,IMATDA(IS,ID)) )
(file: wwm_specint.F90, line:     231)
  MIN, dummy argument no  1 (A1)
**[631 E] invalid argument type length for intrinsic procedure
          (All arguments must have the same type length)
    239  ACLOC(IS,ID) = MAX( 0._rkind,
    240    1._rkind/3._rkind * ACOLD(IS,ID) +
    241    2._rkind/3._rkind * ACLOC(IS,ID) + 2._rkind/3._rkind * NEWDAC)
(file: wwm_specint.F90, line:     241)
  MAX, dummy argument no  1 (A1)
**[631 E] invalid argument type length for intrinsic procedure
          (All arguments must have the same type length)

      - program unit: INT_IP_DYN
    334  NEWDAC = IMATRA(IS,ID) * DT4SI / ( 1.0 - DT4SI *
    335  MIN(0._rkind,IMATDA(IS,ID)) )
(file: wwm_specint.F90, line:     335)
  MIN, dummy argument no  1 (A1)
**[631 E] invalid argument type length for intrinsic procedure
          (All arguments must have the same type length)
    336  ACLOC(IS,ID) = MAX( 0.0_rkind, ACLOC(IS,ID) + NEWDAC )
(file: wwm_specint.F90, line:     336)
  MAX, dummy argument no  1 (A1)
**[631 E] invalid argument type length for intrinsic procedure
          (All arguments must have the same type length)
    342  NEWDAC = IMATRA(IS,ID) * DT4SI / ( 1.0 - DT4SI *
    343  MIN(0._rkind,IMATDA(IS,ID)) )
(file: wwm_specint.F90, line:     343)
  MIN, dummy argument no  1 (A1)
**[631 E] invalid argument type length for intrinsic procedure
          (All arguments must have the same type length)
    344  ACLOC(IS,ID) = MAX( 0._rkind,
    345  3._rkind/4._rkind * ACOLD(IS,ID) +
    346  1._rkind/4._rkind * ACLOC(IS,ID) + 1._rkind/4._rkind * NEWDAC)
(file: wwm_specint.F90, line:     346)
  MAX, dummy argument no  1 (A1)
**[631 E] invalid argument type length for intrinsic procedure
          (All arguments must have the same type length)
    353  NEWDAC = IMATRA(IS,ID) * DT4SI / ( 1.0 - DT4SI *
    354    MIN(0._rkind,IMATDA(IS,ID)) )
(file: wwm_specint.F90, line:     354)
  MIN, dummy argument no  1 (A1)
**[631 E] invalid argument type length for intrinsic procedure
          (All arguments must have the same type length)
    355  ACLOC(IS,ID) = MAX( 0._rkind,
    356   1._rkind/3._rkind * ACOLD(IS,ID) +
    357   2._rkind/3._rkind * ACLOC(IS,ID) + 2._rkind/3._rkind * NEWDAC)
(file: wwm_specint.F90, line:     357)
  MAX, dummy argument no  1 (A1)
**[631 E] invalid argument type length for intrinsic procedure
          (All arguments must have the same type length)
    364  NEWDAC = IMATRA(IS,ID) * DT4SI / ( 1.0 - DT4SI * MIN(0._rkind,IMATDA(IS,ID)) )
(file: wwm_specint.F90, line:     364)
  MIN, dummy argument no  1 (A1)
**[631 E] invalid argument type length for intrinsic procedure
          (All arguments must have the same type length)
    372  ACLOC(IS,ID) = MAX( 0.0_rkind, ACLOC(IS,ID) + NEWDAC )
(file: wwm_specint.F90, line:     372)
  MAX, dummy argument no  1 (A1)
**[631 E] invalid argument type length for intrinsic procedure
          (All arguments must have the same type length)
    379  NEWDAC = IMATRA(IS,ID) * DT4SI / ( 1.0 - DT4SI * MIN(0._rkind,IMATDA(IS,ID)) )
(file: wwm_specint.F90, line:     379)
  MIN, dummy argument no  1 (A1)
**[631 E] invalid argument type length for intrinsic procedure
          (All arguments must have the same type length)
    387  ACLOC(IS,ID) = MAX( 0._rkind, 3./4. * ACOLD(IS,ID) +  1./4. * ACLOC(IS,ID) + 1./4. * NEWDAC
)
(file: wwm_specint.F90, line:     387)
  MAX, dummy argument no  1 (A1)
**[631 E] invalid argument type length for intrinsic procedure
          (All arguments must have the same type length)
    394  NEWDAC = IMATRA(IS,ID) * DT4SI / ( 1.0 - DT4SI * MIN(0._rkind,IMATDA(IS,ID)) )
(file: wwm_specint.F90, line:     394)
  MIN, dummy argument no  1 (A1)
**[631 E] invalid argument type length for intrinsic procedure
          (All arguments must have the same type length)
    402  ACLOC(IS,ID) = MAX( 0._rkind, 1./3. * ACOLD(IS,ID) +  2./3. * ACLOC(IS,ID) + 2./3. * NEWDAC
)
(file: wwm_specint.F90, line:     402)
  MAX, dummy argument no  1 (A1)
**[631 E] invalid argument type length for intrinsic procedure
          (All arguments must have the same type length)

   -- file: wwm_wind.F90

      - program unit: INIT_WIND_INPUT
                       WRITE(STAT%FHNDL,'(A36,2I10,4F15.4)') 'CALLING READ_NETCDF_NARR FROM INIT_WIND_CURRENT_WATLEV',IT, FORECASTHOURS, DTMP, SEWI%DELT, MAIN%TMJD, WIND_TIME_ALL_FILES(1)
                       WRITE(STAT%FHNDL,'(A36,2I10,4F15.4)') 'CALLING READ_NETCDF_NARR2 FROM INPUT', IT, DTMP, SEWI%DELT, MAIN%TMJD, WIND_TIME_ALL_FILES(1)
                           CALL INTELEMENT( XYPWIND(1,INE_WIND(:,WIND_ELE(IP))), XYPWIND(2,INE_WIND(:,WIND_ELE(IP))), UWND_NARR(INE_WIND(:,WIND_ELE(IP))),XP(IP),YP(IP),Wi, WINDXY(IP,1),.FALSE.)
                           CALL INTELEMENT( XYPWIND(1,INE_WIND(:,WIND_ELE(IP))), XYPWIND(2,INE_WIND(:,WIND_ELE(IP))), VWND_NARR(INE_WIND(:,WIND_ELE(IP))),XP(IP),YP(IP),Wi, WINDXY(IP,2),.FALSE.)

      - program unit: UPDATE_WIND
                  CALL INTELEMENT(XYPWIND(1,INE_WIND(:,WIND_ELE(IP))), XYPWIND(2,INE_WIND(:,WIND_ELE(IP))),UWND_NARR(INE_WIND(:,WIND_ELE(IP))),XP(IP),YP(IP),Wi,TMP(IP,1),.FALSE.)
                  CALL INTELEMENT(XYPWIND(1,INE_WIND(:,WIND_ELE(IP))), XYPWIND(2,INE_WIND(:,WIND_ELE(IP))),VWND_NARR(INE_WIND(:,WIND_ELE(IP))),XP(IP),YP(IP),Wi,TMP(IP,2),.FALSE.)
    344  IF (K.EQ.1) THEN
(file: wwm_wind.F90, line:     344)
  K
**[312 E] no value assigned to this variable
(file: wwm_wind.F90, line:     344)
  K
**[307 E] variable not defined

      - program unit: INIT_NETCDF_DWD

      - program unit: READ_NETCDF_DWD

      - program unit: INIT_NETCDF_CRFS

      - program unit: INIT_NETCDF_NARR

      - program unit: READ_NETCDF_CRFS

      - program unit: READ_NETCDF_NARR

      - program unit: GET_WRF_TIME_INDEX

      - program unit: READ_INTERP_NETCDF_WRF

      - program unit: INIT_NETCDF_WRF

   -- reference structure

   -- global program analysis
  MPI_ALLGATHER, referenced in PARTITION_HGRID, argument no  4 (RECVBUF)
**[573 E] argument type inconsistent with specification
  MPI_ALLGATHERV, referenced in PARTITION_HGRID, argument no  4 (RECVBUF)
**[573 E] argument type inconsistent with specification
  CUBIC_SPLINE, referenced in HGRAD_NODES, argument no  4 (YP1)
**[582 E] argument type length inconsistent with specification
  CUBIC_SPLINE, referenced in HGRAD_NODES, argument no  5 (YP2)
**[582 E] argument type length inconsistent with specification
  VEC2DEG, referenced in PARAMENG, argument no  1 (U)
**[616 E] input or input/output argument is not defined
          (The argument is an input argument and must be defined on entry)
  VEC2DEG, referenced in PARAMENG, argument no  2 (V)
**[616 E] input or input/output argument is not defined
          (The argument is an input argument and must be defined on entry)
  PIPE_ROMS_IN, referenced in IO_1, argument no  2 (IFILE)
**[616 E] input or input/output argument is not defined
          (The argument is an input argument and must be defined on entry)
  PIPE_ROMS_IN, referenced in IO_1, argument no  3 (IT)
**[616 E] input or input/output argument is not defined
          (The argument is an input argument and must be defined on entry)
  INT_IP_DYN, referenced in SOURCE_INT_EXP, argument no  3 (DTMIN)
**[582 E] argument type length inconsistent with specification

   -- messages presented:

    1x[307 E] variable not defined
    1x[312 E] no value assigned to this variable
    2x[573 E] argument type inconsistent with specification
   10x[574 E] argument type inconsistent with first occurrence (int/log)
    7x[580 E] argument type length inconsistent with first occurrence
    3x[582 E] argument type length inconsistent with specification
    4x[616 E] input or input/output argument is not defined
  212x[631 E] invalid argument type length for intrinsic procedure

number of error messages:           240

