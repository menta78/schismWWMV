################################################################################
# Parallel SELFE Makefile
#
# User makes environment settings for particular OS / PLATFORM / COMPILER / MPI
# below as well as setting flags having to do with included algorithms (e.g. sediment)
# and the compiler configuration (debug, timing). 
#
# The environment settings are based on the following options.
#
# Compiler name:
#   FCS: Serial compiler (for utilities)
#   FCP: Parallel compiler
#   FLD: Linker (in general same as parallel compiler)
#
# Compilation flags
#   FCSFLAGS: Flags for serial compilation
#   FCPFLAGS: Flags for parallel compilation (including all pre-processing flags)
#   FLDFLAGS: Flags for linker (e.g., -O2)
#
# Preprocessor flags:
#   DEBUG: Enable debugging code
#   ORDERED_SUM: Enable globally ordered sums & dot-products for bit reproducibility
#     of state quantities independent of number of processors (note: this can
#     significantly degrade performance);
#   INCLUDE_TIMING: Enable wallclock timing of code (note: this can have slight
#     effect on performance);
#   MPI_VERSION = 1 or 2: Version of MPI (try 2 first, if compile fails due to mpi
#     related errors then switch to version 1;
#
# Libraries (needed for parallel code)
#   MTSLIBS: Flags for linking ParMeTiS/MeTiS libaries
################################################################################

ENV = SIRIUS

################################################################################
# Environment 
################################################################################

FCP = mpif90
FLD = $(FCP)
# MPI vserion (1 or 2)
PPFLAGS := $(PPFLAGS) -DMPIVERSION=2
#-CB is much slower to compile
FCPFLAGS = $(PPFLAGS) -O2 -Bstatic -assume byterecl #MPI code
FLDFLAGS = -O2 #for final linking of object files
#####Libraries
MTSLIBS = -L/home/users/yinglong/SELFE/ParMetis-3.1-Sep2010/ -lparmetis -lmetis
CDFLIBS = -L/share/apps/netcdf/lib/ -lnetcdf -L/opt/intel/fce/10.1.015/lib/ -lirc
CDFMOD = -I/share/apps/netcdf/include/ # modules for netcdf

################################################################################
# Algorithm preference flags.
# Comment out unwanted modules and flags.
################################################################################

# -DSELFE is always on and is defined elsewhere

# Precip/evaporation model
# USE_PREC_EVAP = yes
# PPFLAGS := $(PPFLAGS) -DPREC_EVAP 

# MM5 in heat exchange model
# USE_MM5 = yes
# PPFLAGS := $(PPFLAGS) -DMM5

# TVD flag (turn off for performance)
#  CHOOSE_TVD = yes
#   EXEC := $(EXEC)_CHOOSE_TVD

# GOTM turbulence closure model
# USE_GOTM = yes

# Don't comment out the follow ifdef
ifdef USE_GOTM
   GTMMOD =  -I/home/yinglong/GOTM/gotm-3.2.5/TSUNAMI/modules/IFORT/ #modules
   GTMLIBS = -L/home/yinglong/GOTM/gotm-3.2.5/TSUNAMI/lib/IFORT/ -lturbulence_prod  -lutil_prod
else
   GTMMOD =
   GTMLIBS =
endif

# Wind wave model WWM
# USE_WWM = yes
# Implicit schemes in WWM needs PetSc
# USE_PETSC = yes

# TIMOR 
# USE_TIMOR = yes

# Harmonic analysis tool
# USE_HA = yes

##### Select only _one_ model from below

# Ecological model - NAPZD Spitz (internal use only)
# USE_NAPZD = yes

# Or:
# Ecological model (EcoSim)
# USE_ECO = yes

# Or:
# CE-QUAL-ICM
# USE_ICM = yes

# Or:
# Sediment model 
# USE_SED = yes

#Or:
# Sediment model (2D)
# USE_SED2D = yes

# Or:
# Oil spill model (not active)
# USE_OIL = yes

#########  Compiler configuration related flags

# Include a timer
# USE_TIMER = yes

# Debug mode (more time consuming)
# USE_DEBUG = yes


######### Specialty compiler flags and workarounds

# Add -DNO_TR_15581 like below for allocatable array problem in sflux_subs.F90
# PPFLAGS := $(PPFLAGS) -DNO_TR_15581

# For openMPI compiler, search for "USE_OPEN64" below for compiler flags
USE_OPEN64 = no

# Obsolete flags: use USE_WRAP flag to avoid problems in ParMetis lib (calling C from FORTRAN)
# PPFLAGS := $(PPFLAGS) -DUSE_WRAP 



################################################################################
# Alternate executable name if you do not want the default. 
################################################################################
EXEC   := pelfe_$(ENV)_ADC

