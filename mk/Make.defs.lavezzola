################################################################################
# Parallel SCHISM Makefile
#
# User makes environment settings for particular OS / PLATFORM / COMPILER / MPI
# below as well as setting flags having to do with included algorithms (e.g. sediment)
# and the compiler configuration (debug, timing). 
#
# The environment settings are based on the following options.
#
# Compiler name:
#   FCS: Serial compiler (for utilities)
#   FCP: Parallel compiler
#   FLD: Linker (in general same as parallel compiler)
#
# Compilation flags
#   FCSFLAGS: Flags for serial compilation
#   FCPFLAGS: Flags for parallel compilation (including all pre-processing flags)
#   FLDFLAGS: Flags for linker (e.g., -O2)
#
# Preprocessor flags:
#   DEBUG: Enable debugging code
#   ORDERED_SUM: Enable globally ordered sums & dot-products for bit reproducibility
#     of state quantities independent of number of processors (note: this can
#     significantly degrade performance);
#   INCLUDE_TIMING: Enable wallclock timing of code (note: this can have slight
#     effect on performance);
#   MPI_VERSION = 1 or 2: Version of MPI (try 2 first, if compile fails due to mpi
#     related errors then switch to version 1;
#
# Libraries (needed for parallel code)
#   MTSLIBS: Flags for linking ParMeTiS/MeTiS libaries
#   ALTLIBS: Flags for linking alternate solver libraries (LAPACK or ITPACK,
#            these are just for testing)
#
#
#
################################################################################



################################################################################
# Environment for lavezzola at California DWR
################################################################################
ENV = lavezzola

FCP = mpif90
FCS = $(FCP)
FLD = $(FCP)

# MPI vserion (1 or 2) 
PPFLAGS    := $(PPFLAGS) -DMPIVERSION=2    #-DUSE_WRAP
FCPFLAGS    = $(PPFLAGS) -O2 -ffree-line-length-0
FLDFLAGS    = -O2

MTSLIBS     = -L./ParMetis-3.1-Sep2010  -lparmetis -lmetis
CDFLIBS     = ${ANAG_NETCDF_LIB}  -lhdf5_hl ${ANAG_HDF5_LIB} 
CDFMOD      = ${ANAG_NETCDF_INC} ${ANAG_HDF5_INC}
USE_OPEN64 := TRUE

################################################################################
# Alternate executable name if you do not want the default. File including
# any extension you might want
################################################################################

#EXEC   := othername.ex


################################################################################
# Algorithm preference flags.
# Comment out unwanted modules and flags.
################################################################################

# -DSCHISM is always on and is defined elsewhere

# Precip/evaporation model
# PPFLAGS := $(PPFLAGS) -DPREC_EVAP 
# EXEC := $(EXEC)_EVAP

# MM5 in heat exchange model
# PPFLAGS := $(PPFLAGS) -DMM5
# EXEC := $(EXEC)_MM5

# TVD limiter options (set as one of these: SB, VL, OS, MM)
# No default and so these 2 lines should NOT be commented out!
 TVD_LIM = SB
 EXEC := $(EXEC)_$(TVD_LIM)

# GOTM turbulence closure model
# GOTM = yes

# Wind wave model WWM
# WWM = yes
# EXEC := $(EXEC)_WWM

# Harmonic analysis tool
# HA = yes
# EXEC := $(EXEC)_HA

#####Tracer models
# Generic (user defined) tracer model
# USE_GEN = yes
# EXEC := $(EXEC)_GEN

# Age
# USE_AGE = yes
# EXEC := $(EXEC)_AGE

# Sediment model (3D)
# USE_SED = yes
# EXEC := $(EXEC)_SED

# Ecological model (EcoSim)
# USE_ECO = yes
# EXEC := $(EXEC)_ECO

# CE-QUAL-ICM
# USE_ICM = yes
# EXEC := $(EXEC)_ICM

# Oil spill model (not active)
# USE_OIL = yes
# EXEC := $(EXEC)_OIL

# Ecological model - NAPZD Spitz (unavailable)
# USE_NAPZD = yes
# EXEC := $(EXEC)_NAPZD

# TIMOR (not active yet)
# USE_TIMOR = yes
# EXEC := $(EXEC)_TIMOR

####End of tracer models

# Sediment model (2D)
# USE_SED2D = yes
# EXEC := $(EXEC)_SED2D

#########  Compiler configuration related flags

# Include a timer
# TIMER = yes

# Debug mode (more time consuming)
# USE_DEBUG = yes


######### Specialty compiler flags and workarounds
# Add -DNO_TR_15581 like below for allocatable array problem in sflux_subs.F90
#PPFLAGS := $(PPFLAGS) -DNO_TR_15581

# Obsolete flags: use USE_WRAP flag to avoid problems in ParMetis lib (calling C from FORTRAN)
# PPFLAGS := $(PPFLAGS) -DUSE_WRAP 



#############################################################################################

